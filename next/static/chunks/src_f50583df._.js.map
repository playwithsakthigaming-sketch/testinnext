{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/staff/edit/%5Bid%5D/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport type { StaffData, StaffMember } from '@/lib/staff-members';\n\nexport type { StaffMember };\n\nconst formSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  role: z.string().min(1, 'Role is required'),\n  imageUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n  steamUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n  truckersmpUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nconst staffFilePath = path.join(process.cwd(), 'src', 'lib', 'staff-members.json');\n\nasync function readJsonFile<T>(filePath: string): Promise<T> {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return { staffMembers: [] } as any;\n        }\n        throw error;\n    }\n}\n\nasync function writeJsonFile(filePath: string, data: any): Promise<void> {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n}\n\nexport async function getStaffMember(id: string): Promise<StaffMember | undefined> {\n    const staffData = await readJsonFile<StaffData>(staffFilePath);\n    const member = staffData.staffMembers.find((m) => m.id === id);\n    return member;\n}\n\nexport async function updateStaffMember(id: string, values: FormValues) {\n  const validation = formSchema.safeParse(values);\n  if (!validation.success) {\n    return { success: false, message: 'Invalid data provided.' };\n  }\n\n  try {\n    const staffData = await readJsonFile<StaffData>(staffFilePath);\n    \n    const memberIndex = staffData.staffMembers.findIndex((m) => m.id === id);\n    if (memberIndex === -1) {\n        return { success: false, message: 'Staff member not found.' };\n    }\n\n    staffData.staffMembers[memberIndex] = {\n        ...staffData.staffMembers[memberIndex],\n        name: validation.data.name,\n        role: validation.data.role,\n        imageUrl: validation.data.imageUrl,\n        steamUrl: validation.data.steamUrl,\n        truckersmpUrl: validation.data.truckersmpUrl,\n    };\n\n    await writeJsonFile(staffFilePath, staffData);\n\n    revalidatePath('/admin/staff');\n    revalidatePath(`/admin/staff/edit/${id}`);\n    revalidatePath('/staff');\n    \n    return { success: true };\n  } catch (error) {\n    console.error('Error updating staff member:', error);\n    return { success: false, message: 'Failed to write to data file.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6CsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/staff/edit/%5Bid%5D/edit-staff-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { updateStaffMember, type StaffMember } from \"./actions\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport Link from \"next/link\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nconst formSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  role: z.string().min(1, \"Role is required\"),\n  imageUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n  steamUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n  truckersmpUrl: z.string().url('Must be a valid URL').optional().or(z.literal('')),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nconst roleOptions = [\n    'Managing Director', 'Marketing Executive', 'Human Resource Staff', 'Trainer',\n    'Event Staff', 'Event Organizer', 'Media Staff', 'Media Editor',\n    'Senior Driver', 'Driver', 'Trainee'\n];\n\nexport function EditStaffForm({ member }: { member: StaffMember }) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: member.name,\n      role: member.role,\n      imageUrl: member.imageUrl || \"\",\n      steamUrl: member.steamUrl || \"\",\n      truckersmpUrl: member.truckersmpUrl || \"\",\n    },\n  });\n\n  async function onSubmit(values: FormValues) {\n    setIsSubmitting(true);\n    const result = await updateStaffMember(member.id, values);\n    setIsSubmitting(false);\n\n    if (result.success) {\n      toast({\n        title: \"Success\",\n        description: \"Staff member details updated successfully.\",\n      });\n      router.push(\"/admin/staff\");\n      router.refresh(); \n    } else {\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: result.message || \"An error occurred.\",\n      });\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter member's name\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"role\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Role</FormLabel>\n               <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a role\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {roleOptions.map(role => (\n                    <SelectItem key={role} value={role}>{role}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"imageUrl\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Image URL (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"https://example.com/avatar.png\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"steamUrl\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Steam URL (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"https://steamcommunity.com/id/...\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"truckersmpUrl\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>TruckersMP URL (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"https://truckersmp.com/user/...\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div className=\"flex justify-end gap-4\">\n            <Button variant=\"outline\" asChild><Link href=\"/admin/staff\">Cancel</Link></Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Saving...</> : \"Save Changes\"}\n            </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/current-year.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nexport function CurrentYear() {\n    const [year, setYear] = useState<number | null>(null);\n\n    useEffect(() => {\n        setYear(new Date().getFullYear());\n    }, []);\n\n    if (!year) {\n        // Return a placeholder or null to avoid hydration mismatch\n        return null;\n    }\n\n    return <span>{year}</span>;\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIO,SAAS;;IACZ,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,QAAQ,IAAI,OAAO,WAAW;QAClC;gCAAG,EAAE;IAEL,IAAI,CAAC,MAAM;QACP,2DAA2D;QAC3D,OAAO;IACX;IAEA,qBAAO,6LAAC;kBAAM;;;;;;AAClB;GAbgB;KAAA","debugId":null}}]
}