{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { Job } from '@/lib/truckershub-types';\n\ntype UserApiResponse = {\n    status: boolean;\n    response: {\n        username: string;\n        email: string;\n        avatar: string;\n        country: string;\n        role: {\n            name: string;\n        };\n        steam_id: string;\n        total_km: number;\n        total_jobs: number;\n        longest_job: number;\n        id: number;\n        registered: string;\n    };\n};\n\ntype JobsApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\ntype StatsApiResponse = {\n    status: boolean;\n    response: {\n        ets: { total_km: number; total_jobs: number; longest_job: number };\n        ats: { total_km: number; total_jobs: number; longest_job: number };\n    };\n};\n\n\nexport type UserProfile = {\n    username: string;\n    email: string;\n    avatar: string;\n    country: string;\n    role: {\n        name: string;\n    };\n    steam_id: string;\n    total_km: number;\n    total_jobs: number;\n    longest_job: number;\n    id: number;\n    registered: string;\n    license_number: string;\n    division: string | null;\n    timezone: string;\n    jobs: Job[];\n    stats: StatsApiResponse['response'] | null;\n};\n\nasync function fetchFromTruckersHub(endpoint: string) {\n     const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n    const url = `${process.env.APP_URL}/api/truckershub?endpoint=${endpoint}`;\n    const res = await fetch(url, {\n        headers: { Authorization: apiKey },\n        next: { revalidate: 300 } // Revalidate every 5 minutes\n    });\n\n    if (!res.ok) {\n        console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n        return null;\n    }\n\n    return res.json();\n}\n\nexport async function getProfileData(): Promise<UserProfile | null> {\n    const userData = await fetchFromTruckersHub('user') as UserApiResponse | null;\n    \n    if (userData && userData.status && userData.response) {\n        const userResponse = userData.response;\n        \n        const [jobsData, statsData] = await Promise.all([\n            fetchFromTruckersHub(`drivers/${userResponse.steam_id}/jobs`) as Promise<JobsApiResponse | null>,\n            fetchFromTruckersHub(`stats/${userResponse.steam_id}`) as Promise<StatsApiResponse | null>\n        ]);\n\n        const jobs = (jobsData && jobsData.status && Array.isArray(jobsData.response)) ? jobsData.response : [];\n        const stats = (statsData && statsData.status) ? statsData.response : null;\n\n        return {\n            ...userResponse,\n            license_number: `NL${userResponse.id}${new Date(userResponse.registered).getTime() % 100000}`,\n            division: 'Alpha',\n            timezone: 'Asia/Kolkata', // Placeholder\n            jobs,\n            stats,\n        };\n    } else {\n        console.error(`Invalid API response structure for user:`, userData);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AA2DA,eAAe,qBAAqB,QAAgB;IAC/C,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC/C,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IACA,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU;IACzE,MAAM,MAAM,MAAM,MAAM,KAAK;QACzB,SAAS;YAAE,eAAe;QAAO;QACjC,MAAM;YAAE,YAAY;QAAI,EAAE,6BAA6B;IAC3D;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;QAC3F,OAAO;IACX;IAEA,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,qBAAqB;IAE5C,IAAI,YAAY,SAAS,MAAM,IAAI,SAAS,QAAQ,EAAE;QAClD,MAAM,eAAe,SAAS,QAAQ;QAEtC,MAAM,CAAC,UAAU,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC5C,qBAAqB,CAAC,QAAQ,EAAE,aAAa,QAAQ,CAAC,KAAK,CAAC;YAC5D,qBAAqB,CAAC,MAAM,EAAE,aAAa,QAAQ,EAAE;SACxD;QAED,MAAM,OAAO,AAAC,YAAY,SAAS,MAAM,IAAI,MAAM,OAAO,CAAC,SAAS,QAAQ,IAAK,SAAS,QAAQ,GAAG,EAAE;QACvG,MAAM,QAAQ,AAAC,aAAa,UAAU,MAAM,GAAI,UAAU,QAAQ,GAAG;QAErE,OAAO;YACH,GAAG,YAAY;YACf,gBAAgB,CAAC,EAAE,EAAE,aAAa,EAAE,GAAG,IAAI,KAAK,aAAa,UAAU,EAAE,OAAO,KAAK,QAAQ;YAC7F,UAAU;YACV,UAAU;YACV;YACA;QACJ;IACJ,OAAO;QACH,QAAQ,KAAK,CAAC,CAAC,wCAAwC,CAAC,EAAE;QAC1D,OAAO;IACX;AACJ;;;IA1BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/profile/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getProfileData as '00fd4297d0ee03e0f048c25cec0c7fdd31c36392c2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/profile/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/profile/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/profile/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/profile/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}