{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/current-year.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nexport function CurrentYear() {\n    const [year, setYear] = useState<number | null>(null);\n\n    useEffect(() => {\n        setYear(new Date().getFullYear());\n    }, []);\n\n    if (!year) {\n        // Return a placeholder or null to avoid hydration mismatch\n        return null;\n    }\n\n    return <span>{year}</span>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,SAAS;IACZ,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,QAAQ,IAAI,OAAO,WAAW;IAClC,GAAG,EAAE;IAEL,IAAI,CAAC,MAAM;QACP,2DAA2D;QAC3D,OAAO;IACX;IAEA,qBAAO,8OAAC;kBAAM;;;;;;AAClB","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/actions.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport type { EventsData, Event, SlotArea } from '@/lib/events';\nimport type { ImagePlaceholder } from '@/lib/placeholder-images';\n\nconst eventsFilePath = path.join(process.cwd(), 'src', 'lib', 'events.json');\nconst imagesFilePath = path.join(process.cwd(), 'src', 'lib', 'placeholder-images.json');\nconst VTC_ID = '73933';\n\n\nasync function readJsonFile<T>(filePath: string): Promise<T> {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            if (filePath.includes('events.json')) return { events: [] } as any;\n            if (filePath.includes('placeholder-images.json')) return { placeholderImages: [] } as any;\n        }\n        throw error;\n    }\n}\n\nasync function writeJsonFile(filePath: string, data: any): Promise<void> {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n}\n\nexport async function getEvents(): Promise<Event[]> {\n    const data = await readJsonFile<EventsData>(eventsFilePath);\n    return data.events;\n}\n\n\nexport async function deleteEvent(eventId: string) {\n    try {\n        const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n\n        const eventExists = eventsData.events.some(event => event.id === eventId);\n        if (!eventExists) {\n            return { success: false, message: 'Event not found.' };\n        }\n\n        eventsData.events = eventsData.events.filter(event => event.id !== eventId);\n\n        await writeJsonFile(eventsFilePath, eventsData);\n\n        revalidatePath('/admin/events');\n        revalidatePath('/events'); \n\n        return { success: true, message: 'Event deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting event:', error);\n        return { success: false, message: 'Failed to delete event.' };\n    }\n}\n\ntype TMPEvent = {\n    id: number;\n    name: string;\n    url: string;\n    banner: string;\n    map: {\n        name: string;\n        url: string;\n    };\n    departure: {\n        location: string;\n        city: string;\n    };\n    arrive: {\n        location: string;\n        city: string;\n    };\n    server: {\n        name: string;\n    };\n    starts_at: string;\n    meetup_at: string;\n};\n\n// Helper to format date and time\nconst formatDateTimeFromISO = (isoString: string): string => {\n    const date = new Date(isoString);\n    const day = String(date.getUTCDate()).padStart(2, '0');\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n    const year = date.getUTCFullYear();\n    const hour = String(date.getUTCHours()).padStart(2, '0');\n    const minute = String(date.getUTCMinutes()).padStart(2, '0');\n    return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n};\n\nasync function addSingleEvent(tmpEvent: TMPEvent): Promise<{success: boolean, message: string}> {\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n\n    const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n    \n    if (eventExists) {\n        return { success: false, message: \"This event already exists.\"};\n    }\n            \n    const imageId = `event-${tmpEvent.id}`;\n\n    const newImage: ImagePlaceholder = {\n        id: imageId,\n        description: `Image for ${tmpEvent.name}`,\n        imageUrl: tmpEvent.banner,\n        imageHint: \"truck convoy\",\n    };\n    imagesData.placeholderImages.unshift(newImage);\n\n    const newEvent: Event = {\n        id: String(tmpEvent.id),\n        imageId: imageId,\n        title: tmpEvent.name,\n        url: tmpEvent.url,\n        type: 'internal',\n        description: \"Event details automatically imported from TruckersMP.\",\n        rules: \"Standard TruckersMP rules apply.\",\n        attendees: 0,\n        vtcs: 0,\n        date: formatDateTimeFromISO(tmpEvent.meetup_at),\n        meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n        departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n        slots: [],\n        departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n        arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n        server: tmpEvent.server.name,\n        routeMapUrl: tmpEvent.map.url,\n    };\n    eventsData.events.unshift(newEvent);\n\n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n    \n    return { success: true, message: \"Event added successfully.\"};\n}\n\nexport async function addEventFromTruckersMPId(eventId: string) {\n    try {\n        const res = await fetch(`/api/truckersmp?endpoint=events/${eventId}`);\n        if (!res.ok) {\n            throw new Error(`Failed to fetch event from TruckersMP. Status: ${res.status}`);\n        }\n\n        const tmpData = await res.json();\n        const tmpEvent = tmpData.response as TMPEvent;\n\n        if (!tmpEvent) {\n             return { success: false, message: \"Could not find event data in TruckersMP response.\" };\n        }\n\n        return await addSingleEvent(tmpEvent);\n\n    } catch (error) {\n        console.error('Error adding event from TruckersMP ID:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n        return { success: false, message: errorMessage };\n    }\n}\n\n\nexport async function syncEventsFromTruckersMP() {\n  try {\n    const res = await fetch(`https://api.truckersmp.com/v2/vtc/${VTC_ID}/events`);\n    if (!res.ok) {\n        throw new Error(`Failed to fetch events from TruckersMP. Status: ${res.status}`);\n    }\n\n    const tmpData = await res.json();\n    const tmpEvents = tmpData.response.events as TMPEvent[];\n\n    if (!tmpEvents || tmpEvents.length === 0) {\n        return { success: true, message: \"No new events found on TruckersMP.\", added: 0 };\n    }\n\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n    \n    let addedCount = 0;\n\n    for (const tmpEvent of tmpEvents) {\n        // Skip events that are in the past\n        if (new Date(tmpEvent.starts_at) < new Date()) {\n            continue;\n        }\n\n        const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n        \n        if (!eventExists) {\n            addedCount++;\n            \n            const imageId = `event-${tmpEvent.id}`;\n\n            const newImage: ImagePlaceholder = {\n                id: imageId,\n                description: `Image for ${tmpEvent.name}`,\n                imageUrl: tmpEvent.banner,\n                imageHint: \"truck convoy\",\n            };\n            imagesData.placeholderImages.unshift(newImage);\n\n            const newEvent: Event = {\n                id: String(tmpEvent.id),\n                imageId: imageId,\n                title: tmpEvent.name,\n                url: tmpEvent.url,\n                type: 'internal',\n                description: \"Event details automatically imported from TruckersMP.\",\n                rules: \"Standard TruckersMP rules apply.\",\n                attendees: 0,\n                vtcs: 0,\n                date: formatDateTimeFromISO(tmpEvent.meetup_at),\n                meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n                departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n                slots: [],\n                departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n                arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n                server: tmpEvent.server.name,\n                routeMapUrl: tmpEvent.map.url,\n            };\n            eventsData.events.unshift(newEvent);\n        }\n    }\n    \n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n\n    if (addedCount > 0) {\n      return { success: true, message: `Successfully synced ${addedCount} new event(s).`, added: addedCount };\n    }\n    return { success: true, message: 'Events are already up-to-date.', added: 0 };\n\n  } catch (error) {\n    console.error('Error syncing events from TruckersMP:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, message: errorMessage, added: 0 };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAqCsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/delete-event-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { Button } from '@/components/ui/button';\nimport { DropdownMenuItem } from '@/components/ui/dropdown-menu';\nimport { Loader2, Trash2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport { deleteEvent } from './actions';\n\nexport function DeleteEventDialog({ eventId }: { eventId: string }) {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [open, setOpen] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    const result = await deleteEvent(eventId);\n    setIsDeleting(false);\n\n    if (result.success) {\n      toast({\n        title: 'Success',\n        description: 'Event deleted successfully.',\n      });\n      setOpen(false);\n      router.refresh();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.message || 'An error occurred.',\n      });\n    }\n  };\n\n  return (\n    <AlertDialog open={open} onOpenChange={setOpen}>\n      <AlertDialogTrigger asChild>\n        <DropdownMenuItem\n          onSelect={(e) => e.preventDefault()}\n          className=\"text-red-500\"\n        >\n          <Trash2 className=\"mr-2 h-4 w-4\" />\n          Delete\n        </DropdownMenuItem>\n      </AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n          <AlertDialogDescription>\n            This action cannot be undone. This will permanently delete the\n            event from your records.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel disabled={isDeleting}>Cancel</AlertDialogCancel>\n          <AlertDialogAction\n            onClick={handleDelete}\n            disabled={isDeleting}\n            className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n          >\n            {isDeleting ? (\n              <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Deleting...</>\n            ) : (\n              'Delete'\n            )}\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAYA;AACA;AAAA;AACA;AACA;AACA;AAnBA;;;;;;;;;AAqBO,SAAS,kBAAkB,EAAE,OAAO,EAAuB;IAChE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,cAAc;QACd,MAAM,SAAS,MAAM,CAAA,GAAA,qKAAA,CAAA,cAAW,AAAD,EAAE;QACjC,cAAc;QAEd,IAAI,OAAO,OAAO,EAAE;YAClB,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;YACA,QAAQ;YACR,OAAO,OAAO;QAChB,OAAO;YACL,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa,OAAO,OAAO,IAAI;YACjC;QACF;IACF;IAEA,qBACE,8OAAC,2IAAA,CAAA,cAAW;QAAC,MAAM;QAAM,cAAc;;0BACrC,8OAAC,2IAAA,CAAA,qBAAkB;gBAAC,OAAO;0BACzB,cAAA,8OAAC,4IAAA,CAAA,mBAAgB;oBACf,UAAU,CAAC,IAAM,EAAE,cAAc;oBACjC,WAAU;;sCAEV,8OAAC,0MAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;0BAIvC,8OAAC,2IAAA,CAAA,qBAAkB;;kCACjB,8OAAC,2IAAA,CAAA,oBAAiB;;0CAChB,8OAAC,2IAAA,CAAA,mBAAgB;0CAAC;;;;;;0CAClB,8OAAC,2IAAA,CAAA,yBAAsB;0CAAC;;;;;;;;;;;;kCAK1B,8OAAC,2IAAA,CAAA,oBAAiB;;0CAChB,8OAAC,2IAAA,CAAA,oBAAiB;gCAAC,UAAU;0CAAY;;;;;;0CACzC,8OAAC,2IAAA,CAAA,oBAAiB;gCAChB,SAAS;gCACT,UAAU;gCACV,WAAU;0CAET,2BACC;;sDAAE,8OAAC,iNAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;wCAA8B;;mDAEnD;;;;;;;;;;;;;;;;;;;;;;;;AAOd","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/actions.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport type { EventsData, Event, SlotArea } from '@/lib/events';\nimport type { ImagePlaceholder } from '@/lib/placeholder-images';\n\nconst eventsFilePath = path.join(process.cwd(), 'src', 'lib', 'events.json');\nconst imagesFilePath = path.join(process.cwd(), 'src', 'lib', 'placeholder-images.json');\nconst VTC_ID = '73933';\n\n\nasync function readJsonFile<T>(filePath: string): Promise<T> {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            if (filePath.includes('events.json')) return { events: [] } as any;\n            if (filePath.includes('placeholder-images.json')) return { placeholderImages: [] } as any;\n        }\n        throw error;\n    }\n}\n\nasync function writeJsonFile(filePath: string, data: any): Promise<void> {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n}\n\nexport async function getEvents(): Promise<Event[]> {\n    const data = await readJsonFile<EventsData>(eventsFilePath);\n    return data.events;\n}\n\n\nexport async function deleteEvent(eventId: string) {\n    try {\n        const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n\n        const eventExists = eventsData.events.some(event => event.id === eventId);\n        if (!eventExists) {\n            return { success: false, message: 'Event not found.' };\n        }\n\n        eventsData.events = eventsData.events.filter(event => event.id !== eventId);\n\n        await writeJsonFile(eventsFilePath, eventsData);\n\n        revalidatePath('/admin/events');\n        revalidatePath('/events'); \n\n        return { success: true, message: 'Event deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting event:', error);\n        return { success: false, message: 'Failed to delete event.' };\n    }\n}\n\ntype TMPEvent = {\n    id: number;\n    name: string;\n    url: string;\n    banner: string;\n    map: {\n        name: string;\n        url: string;\n    };\n    departure: {\n        location: string;\n        city: string;\n    };\n    arrive: {\n        location: string;\n        city: string;\n    };\n    server: {\n        name: string;\n    };\n    starts_at: string;\n    meetup_at: string;\n};\n\n// Helper to format date and time\nconst formatDateTimeFromISO = (isoString: string): string => {\n    const date = new Date(isoString);\n    const day = String(date.getUTCDate()).padStart(2, '0');\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n    const year = date.getUTCFullYear();\n    const hour = String(date.getUTCHours()).padStart(2, '0');\n    const minute = String(date.getUTCMinutes()).padStart(2, '0');\n    return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n};\n\nasync function addSingleEvent(tmpEvent: TMPEvent): Promise<{success: boolean, message: string}> {\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n\n    const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n    \n    if (eventExists) {\n        return { success: false, message: \"This event already exists.\"};\n    }\n            \n    const imageId = `event-${tmpEvent.id}`;\n\n    const newImage: ImagePlaceholder = {\n        id: imageId,\n        description: `Image for ${tmpEvent.name}`,\n        imageUrl: tmpEvent.banner,\n        imageHint: \"truck convoy\",\n    };\n    imagesData.placeholderImages.unshift(newImage);\n\n    const newEvent: Event = {\n        id: String(tmpEvent.id),\n        imageId: imageId,\n        title: tmpEvent.name,\n        url: tmpEvent.url,\n        type: 'internal',\n        description: \"Event details automatically imported from TruckersMP.\",\n        rules: \"Standard TruckersMP rules apply.\",\n        attendees: 0,\n        vtcs: 0,\n        date: formatDateTimeFromISO(tmpEvent.meetup_at),\n        meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n        departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n        slots: [],\n        departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n        arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n        server: tmpEvent.server.name,\n        routeMapUrl: tmpEvent.map.url,\n    };\n    eventsData.events.unshift(newEvent);\n\n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n    \n    return { success: true, message: \"Event added successfully.\"};\n}\n\nexport async function addEventFromTruckersMPId(eventId: string) {\n    try {\n        const res = await fetch(`/api/truckersmp?endpoint=events/${eventId}`);\n        if (!res.ok) {\n            throw new Error(`Failed to fetch event from TruckersMP. Status: ${res.status}`);\n        }\n\n        const tmpData = await res.json();\n        const tmpEvent = tmpData.response as TMPEvent;\n\n        if (!tmpEvent) {\n             return { success: false, message: \"Could not find event data in TruckersMP response.\" };\n        }\n\n        return await addSingleEvent(tmpEvent);\n\n    } catch (error) {\n        console.error('Error adding event from TruckersMP ID:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n        return { success: false, message: errorMessage };\n    }\n}\n\n\nexport async function syncEventsFromTruckersMP() {\n  try {\n    const res = await fetch(`https://api.truckersmp.com/v2/vtc/${VTC_ID}/events`);\n    if (!res.ok) {\n        throw new Error(`Failed to fetch events from TruckersMP. Status: ${res.status}`);\n    }\n\n    const tmpData = await res.json();\n    const tmpEvents = tmpData.response.events as TMPEvent[];\n\n    if (!tmpEvents || tmpEvents.length === 0) {\n        return { success: true, message: \"No new events found on TruckersMP.\", added: 0 };\n    }\n\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n    \n    let addedCount = 0;\n\n    for (const tmpEvent of tmpEvents) {\n        // Skip events that are in the past\n        if (new Date(tmpEvent.starts_at) < new Date()) {\n            continue;\n        }\n\n        const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n        \n        if (!eventExists) {\n            addedCount++;\n            \n            const imageId = `event-${tmpEvent.id}`;\n\n            const newImage: ImagePlaceholder = {\n                id: imageId,\n                description: `Image for ${tmpEvent.name}`,\n                imageUrl: tmpEvent.banner,\n                imageHint: \"truck convoy\",\n            };\n            imagesData.placeholderImages.unshift(newImage);\n\n            const newEvent: Event = {\n                id: String(tmpEvent.id),\n                imageId: imageId,\n                title: tmpEvent.name,\n                url: tmpEvent.url,\n                type: 'internal',\n                description: \"Event details automatically imported from TruckersMP.\",\n                rules: \"Standard TruckersMP rules apply.\",\n                attendees: 0,\n                vtcs: 0,\n                date: formatDateTimeFromISO(tmpEvent.meetup_at),\n                meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n                departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n                slots: [],\n                departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n                arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n                server: tmpEvent.server.name,\n                routeMapUrl: tmpEvent.map.url,\n            };\n            eventsData.events.unshift(newEvent);\n        }\n    }\n    \n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n\n    if (addedCount > 0) {\n      return { success: true, message: `Successfully synced ${addedCount} new event(s).`, added: addedCount };\n    }\n    return { success: true, message: 'Events are already up-to-date.', added: 0 };\n\n  } catch (error) {\n    console.error('Error syncing events from TruckersMP:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, message: errorMessage, added: 0 };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyKsB,2BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/actions.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport type { EventsData, Event, SlotArea } from '@/lib/events';\nimport type { ImagePlaceholder } from '@/lib/placeholder-images';\n\nconst eventsFilePath = path.join(process.cwd(), 'src', 'lib', 'events.json');\nconst imagesFilePath = path.join(process.cwd(), 'src', 'lib', 'placeholder-images.json');\nconst VTC_ID = '73933';\n\n\nasync function readJsonFile<T>(filePath: string): Promise<T> {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            if (filePath.includes('events.json')) return { events: [] } as any;\n            if (filePath.includes('placeholder-images.json')) return { placeholderImages: [] } as any;\n        }\n        throw error;\n    }\n}\n\nasync function writeJsonFile(filePath: string, data: any): Promise<void> {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n}\n\nexport async function getEvents(): Promise<Event[]> {\n    const data = await readJsonFile<EventsData>(eventsFilePath);\n    return data.events;\n}\n\n\nexport async function deleteEvent(eventId: string) {\n    try {\n        const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n\n        const eventExists = eventsData.events.some(event => event.id === eventId);\n        if (!eventExists) {\n            return { success: false, message: 'Event not found.' };\n        }\n\n        eventsData.events = eventsData.events.filter(event => event.id !== eventId);\n\n        await writeJsonFile(eventsFilePath, eventsData);\n\n        revalidatePath('/admin/events');\n        revalidatePath('/events'); \n\n        return { success: true, message: 'Event deleted successfully.' };\n    } catch (error) {\n        console.error('Error deleting event:', error);\n        return { success: false, message: 'Failed to delete event.' };\n    }\n}\n\ntype TMPEvent = {\n    id: number;\n    name: string;\n    url: string;\n    banner: string;\n    map: {\n        name: string;\n        url: string;\n    };\n    departure: {\n        location: string;\n        city: string;\n    };\n    arrive: {\n        location: string;\n        city: string;\n    };\n    server: {\n        name: string;\n    };\n    starts_at: string;\n    meetup_at: string;\n};\n\n// Helper to format date and time\nconst formatDateTimeFromISO = (isoString: string): string => {\n    const date = new Date(isoString);\n    const day = String(date.getUTCDate()).padStart(2, '0');\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n    const year = date.getUTCFullYear();\n    const hour = String(date.getUTCHours()).padStart(2, '0');\n    const minute = String(date.getUTCMinutes()).padStart(2, '0');\n    return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n};\n\nasync function addSingleEvent(tmpEvent: TMPEvent): Promise<{success: boolean, message: string}> {\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n\n    const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n    \n    if (eventExists) {\n        return { success: false, message: \"This event already exists.\"};\n    }\n            \n    const imageId = `event-${tmpEvent.id}`;\n\n    const newImage: ImagePlaceholder = {\n        id: imageId,\n        description: `Image for ${tmpEvent.name}`,\n        imageUrl: tmpEvent.banner,\n        imageHint: \"truck convoy\",\n    };\n    imagesData.placeholderImages.unshift(newImage);\n\n    const newEvent: Event = {\n        id: String(tmpEvent.id),\n        imageId: imageId,\n        title: tmpEvent.name,\n        url: tmpEvent.url,\n        type: 'internal',\n        description: \"Event details automatically imported from TruckersMP.\",\n        rules: \"Standard TruckersMP rules apply.\",\n        attendees: 0,\n        vtcs: 0,\n        date: formatDateTimeFromISO(tmpEvent.meetup_at),\n        meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n        departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n        slots: [],\n        departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n        arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n        server: tmpEvent.server.name,\n        routeMapUrl: tmpEvent.map.url,\n    };\n    eventsData.events.unshift(newEvent);\n\n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n    \n    return { success: true, message: \"Event added successfully.\"};\n}\n\nexport async function addEventFromTruckersMPId(eventId: string) {\n    try {\n        const res = await fetch(`/api/truckersmp?endpoint=events/${eventId}`);\n        if (!res.ok) {\n            throw new Error(`Failed to fetch event from TruckersMP. Status: ${res.status}`);\n        }\n\n        const tmpData = await res.json();\n        const tmpEvent = tmpData.response as TMPEvent;\n\n        if (!tmpEvent) {\n             return { success: false, message: \"Could not find event data in TruckersMP response.\" };\n        }\n\n        return await addSingleEvent(tmpEvent);\n\n    } catch (error) {\n        console.error('Error adding event from TruckersMP ID:', error);\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n        return { success: false, message: errorMessage };\n    }\n}\n\n\nexport async function syncEventsFromTruckersMP() {\n  try {\n    const res = await fetch(`https://api.truckersmp.com/v2/vtc/${VTC_ID}/events`);\n    if (!res.ok) {\n        throw new Error(`Failed to fetch events from TruckersMP. Status: ${res.status}`);\n    }\n\n    const tmpData = await res.json();\n    const tmpEvents = tmpData.response.events as TMPEvent[];\n\n    if (!tmpEvents || tmpEvents.length === 0) {\n        return { success: true, message: \"No new events found on TruckersMP.\", added: 0 };\n    }\n\n    const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n    const imagesData = await readJsonFile<{ placeholderImages: ImagePlaceholder[] }>(imagesFilePath);\n    \n    let addedCount = 0;\n\n    for (const tmpEvent of tmpEvents) {\n        // Skip events that are in the past\n        if (new Date(tmpEvent.starts_at) < new Date()) {\n            continue;\n        }\n\n        const eventExists = eventsData.events.some(e => e.id === String(tmpEvent.id));\n        \n        if (!eventExists) {\n            addedCount++;\n            \n            const imageId = `event-${tmpEvent.id}`;\n\n            const newImage: ImagePlaceholder = {\n                id: imageId,\n                description: `Image for ${tmpEvent.name}`,\n                imageUrl: tmpEvent.banner,\n                imageHint: \"truck convoy\",\n            };\n            imagesData.placeholderImages.unshift(newImage);\n\n            const newEvent: Event = {\n                id: String(tmpEvent.id),\n                imageId: imageId,\n                title: tmpEvent.name,\n                url: tmpEvent.url,\n                type: 'internal',\n                description: \"Event details automatically imported from TruckersMP.\",\n                rules: \"Standard TruckersMP rules apply.\",\n                attendees: 0,\n                vtcs: 0,\n                date: formatDateTimeFromISO(tmpEvent.meetup_at),\n                meetupTime: formatDateTimeFromISO(tmpEvent.meetup_at),\n                departureTime: formatDateTimeFromISO(tmpEvent.starts_at),\n                slots: [],\n                departure: `${tmpEvent.departure.location} (${tmpEvent.departure.city})`,\n                arrival: `${tmpEvent.arrive.location} (${tmpEvent.arrive.city})`,\n                server: tmpEvent.server.name,\n                routeMapUrl: tmpEvent.map.url,\n            };\n            eventsData.events.unshift(newEvent);\n        }\n    }\n    \n    await writeJsonFile(eventsFilePath, eventsData);\n    await writeJsonFile(imagesFilePath, imagesData);\n\n    revalidatePath('/admin/events');\n    revalidatePath('/events');\n\n    if (addedCount > 0) {\n      return { success: true, message: `Successfully synced ${addedCount} new event(s).`, added: addedCount };\n    }\n    return { success: true, message: 'Events are already up-to-date.', added: 0 };\n\n  } catch (error) {\n    console.error('Error syncing events from TruckersMP:', error);\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\n    return { success: false, message: errorMessage, added: 0 };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiJsB,2BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/add-event-by-id-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogDescription,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport { addEventFromTruckersMPId } from './actions';\nimport { ListPlus, Loader2 } from 'lucide-react';\nimport { Label } from '@/components/ui/label';\n\nexport function AddEventByIdDialog() {\n  const [open, setOpen] = useState(false);\n  const [isAdding, setIsAdding] = useState(false);\n  const [eventId, setEventId] = useState('');\n  const { toast } = useToast();\n  const router = useRouter();\n\n  const handleAdd = async () => {\n    if (!eventId) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: 'Please enter a TruckersMP event ID.',\n      });\n      return;\n    }\n    \n    setIsAdding(true);\n    const result = await addEventFromTruckersMPId(eventId);\n    setIsAdding(false);\n\n    if (result.success) {\n      toast({\n        title: 'Success',\n        description: result.message,\n      });\n      setOpen(false);\n      router.refresh();\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: result.message || 'An error occurred.',\n      });\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">\n          <ListPlus className=\"mr-2 h-4 w-4\" />\n          Add from ID\n        </Button>\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Add Event from TruckersMP ID</DialogTitle>\n          <DialogDescription>\n            Enter the TruckersMP event ID to automatically create the event.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n            <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"event-id\" className=\"text-right\">\n                Event ID\n            </Label>\n            <Input\n                id=\"event-id\"\n                value={eventId}\n                onChange={(e) => setEventId(e.target.value)}\n                className=\"col-span-3\"\n                placeholder=\"e.g., 30733\"\n            />\n            </div>\n        </div>\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={() => setOpen(false)}>Cancel</Button>\n          <Button onClick={handleAdd} disabled={isAdding}>\n            {isAdding && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n            Add Event\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAlBA;;;;;;;;;;;AAoBO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,IAAI,CAAC,SAAS;YACZ,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;YACA;QACF;QAEA,YAAY;QACZ,MAAM,SAAS,MAAM,CAAA,GAAA,qKAAA,CAAA,2BAAwB,AAAD,EAAE;QAC9C,YAAY;QAEZ,IAAI,OAAO,OAAO,EAAE;YAClB,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,OAAO;YAC7B;YACA,QAAQ;YACR,OAAO,OAAO;QAChB,OAAO;YACL,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa,OAAO,OAAO,IAAI;YACjC;QACF;IACF;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;;0BAChC,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,OAAO;0BACpB,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAQ;;sCACd,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;0BAIzC,8OAAC,kIAAA,CAAA,gBAAa;;kCACZ,8OAAC,kIAAA,CAAA,eAAY;;0CACX,8OAAC,kIAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,8OAAC,kIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;;8CACf,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAW,WAAU;8CAAa;;;;;;8CAGjD,8OAAC,iIAAA,CAAA,QAAK;oCACF,IAAG;oCACH,OAAO;oCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;oCAC1C,WAAU;oCACV,aAAY;;;;;;;;;;;;;;;;;kCAIpB,8OAAC,kIAAA,CAAA,eAAY;;0CACX,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,SAAS,IAAM,QAAQ;0CAAQ;;;;;;0CACzD,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAW,UAAU;;oCACnC,0BAAY,8OAAC,iNAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;oCAA+B;;;;;;;;;;;;;;;;;;;;;;;;;AAO3E","debugId":null}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/events/events-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { PlusCircle, MoreHorizontal, FilePenLine, RefreshCw, Loader2, ListPlus } from \"lucide-react\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport Link from \"next/link\";\nimport { DeleteEventDialog } from \"./delete-event-dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { syncEventsFromTruckersMP } from './actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport { AddEventByIdDialog } from './add-event-by-id-dialog';\nimport type { Event } from \"@/lib/events\";\n\nexport function EventsClient({ events }: { events: Event[] }) {\n  const [isSyncing, setIsSyncing] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n\n  const handleSync = async () => {\n    setIsSyncing(true);\n    const result = await syncEventsFromTruckersMP();\n    setIsSyncing(false);\n\n    if (result.success) {\n      toast({\n        title: \"Sync Complete\",\n        description: result.message,\n      });\n      if (result.added > 0) {\n        router.refresh();\n      }\n    } else {\n      toast({\n        variant: \"destructive\",\n        title: \"Sync Failed\",\n        description: result.message,\n      });\n    }\n  };\n\n\n  return (\n    <>\n        <div className=\"flex items-center justify-between mb-8 gap-4\">\n        <h1 className=\"text-3xl font-headline\">Manage Events</h1>\n        <div className=\"flex gap-2\">\n            <Button onClick={handleSync} disabled={isSyncing} variant=\"outline\">\n            {isSyncing ? (\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n            ) : (\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\n            )}\n            Sync with TruckersMP\n            </Button>\n            <AddEventByIdDialog />\n            <Button asChild>\n            <Link href=\"/admin/events/create\">\n                <PlusCircle className=\"mr-2 h-4 w-4\" />\n                Create New\n            </Link>\n            </Button>\n        </div>\n        </div>\n\n        <Card>\n        <CardHeader>\n            <CardTitle>All Events</CardTitle>\n        </CardHeader>\n        <CardContent>\n            <Table>\n            <TableHeader>\n                <TableRow>\n                <TableHead>Title</TableHead>\n                <TableHead>Date</TableHead>\n                <TableHead>Type</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                {events.map((event) => (\n                <TableRow key={event.id}>\n                    <TableCell className=\"font-medium\">{event.title}</TableCell>\n                    <TableCell>{event.date}</TableCell>\n                    <TableCell>\n                    <Badge variant={event.type === 'internal' ? 'default' : 'secondary'} className=\"capitalize\">\n                        {event.type}\n                    </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                        <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                            <span className=\"sr-only\">Open menu</span>\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                        <DropdownMenuItem asChild>\n                            <Link href={`/admin/events/edit/${event.id}`}>\n                            <FilePenLine className=\"mr-2 h-4 w-4\" />\n                            Edit\n                            </Link>\n                        </DropdownMenuItem>\n                        <DeleteEventDialog eventId={event.id} />\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n                    </TableCell>\n                </TableRow>\n                ))}\n            </TableBody>\n            </Table>\n        </CardContent>\n        </Card>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}