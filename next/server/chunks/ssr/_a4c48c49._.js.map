{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver } from '@/lib/truckershub-types';\n\ntype TruckersHubResponse<T> = {\n    status: boolean;\n    response: T;\n};\n\n// This function should be executed on the server where process.env is available.\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<T | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`https://api.truckershub.in/v1/${endpoint}`);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        const res = await fetch(url.toString(), {\n             headers: {\n                'Authorization': apiKey,\n                'Content-Type': 'application/json',\n                'User-Agent': 'TamilPasangaVTC/1.0',\n            },\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: TruckersHubResponse<T> = await res.json();\n        \n        if (data && data.status) {\n            if (Array.isArray(data.response) && data.response.length === 0) return [] as T;\n            if (typeof data.response === 'object' && data.response !== null && Object.keys(data.response).length === 0) return {} as T;\n            return data.response;\n        } else {\n            // Avoid logging errors for empty but valid responses\n            if (data.response && typeof data.response === 'object' && Object.keys(data.response).length > 0) {\n                 console.error(`Invalid API response structure from TruckersHub (${endpoint}):`, data);\n            }\n            return null;\n        }\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nexport async function getDashboardData() {\n    try {\n        const [statsData, allTime, monthly, jobs, user, liveDrivers] = await Promise.all([\n            fetchFromTruckersHub<{ vtc: VtcStats }>('vtc'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/alltime'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/monthly'),\n            fetchFromTruckersHub<Job[]>('jobs/all'),\n            fetchFromTruckersHub<{ username: string }>('user'),\n            fetchFromTruckersHub<LiveDriver[]>('live/drivers'),\n        ]);\n\n        const stats = statsData ? statsData.vtc : null;\n        \n        return { stats, allTime, monthly, jobs, user, liveDrivers };\n    } catch (error) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        return { stats: null, allTime: null, monthly: null, jobs: null, user: null, liveDrivers: null };\n    }\n}\n\nexport async function getAllVtcJobs(month?: string, year?: string): Promise<Job[]> {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    return await fetchFromTruckersHub<Job[]>('vtc/jobs', params) || [];\n}\n\nexport async function getMyJobs(): Promise<Job[]> {\n    return await fetchFromTruckersHub<Job[]>('jobs') || [];\n}\n"],"names":[],"mappings":";;;;;;;;;;AAUA,iFAAiF;AACjF,eAAe,qBAAwB,QAAgB,EAAE,MAAwB;IAC7E,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC9C,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IAEA,IAAI;QACA,MAAM,MAAM,IAAI,IAAI,CAAC,8BAA8B,EAAE,UAAU;QAC/D,IAAI,QAAQ;YACR,OAAO,OAAO,CAAC,CAAC,OAAO;gBACnB,IAAI,YAAY,CAAC,MAAM,CAAC,KAAK;YACjC;QACJ;QAEA,MAAM,MAAM,MAAM,MAAM,IAAI,QAAQ,IAAI;YACnC,SAAS;gBACN,iBAAiB;gBACjB,gBAAgB;gBAChB,cAAc;YAClB;YACA,MAAM;gBAAE,YAAY;YAAI,EAAE,6BAA6B;QAC3D;QAGA,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;YAC3F,OAAO;QACX;QAEA,MAAM,OAA+B,MAAM,IAAI,IAAI;QAEnD,IAAI,QAAQ,KAAK,MAAM,EAAE;YACrB,IAAI,MAAM,OAAO,CAAC,KAAK,QAAQ,KAAK,KAAK,QAAQ,CAAC,MAAM,KAAK,GAAG,OAAO,EAAE;YACzE,IAAI,OAAO,KAAK,QAAQ,KAAK,YAAY,KAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI,CAAC,KAAK,QAAQ,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC;YACpH,OAAO,KAAK,QAAQ;QACxB,OAAO;YACH,qDAAqD;YACrD,IAAI,KAAK,QAAQ,IAAI,OAAO,KAAK,QAAQ,KAAK,YAAY,OAAO,IAAI,CAAC,KAAK,QAAQ,EAAE,MAAM,GAAG,GAAG;gBAC5F,QAAQ,KAAK,CAAC,CAAC,iDAAiD,EAAE,SAAS,EAAE,CAAC,EAAE;YACrF;YACA,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,SAAS,EAAE,CAAC,EAAE;QAChE,OAAO;IACX;AACJ;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,CAAC,WAAW,SAAS,SAAS,MAAM,MAAM,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC7E,qBAAwC;YACxC,qBAAwC;YACxC,qBAAwC;YACxC,qBAA4B;YAC5B,qBAA2C;YAC3C,qBAAmC;SACtC;QAED,MAAM,QAAQ,YAAY,UAAU,GAAG,GAAG;QAE1C,OAAO;YAAE;YAAO;YAAS;YAAS;YAAM;YAAM;QAAY;IAC9D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;YAAE,OAAO;YAAM,SAAS;YAAM,SAAS;YAAM,MAAM;YAAM,MAAM;YAAM,aAAa;QAAK;IAClG;AACJ;AAEO,eAAe,cAAc,KAAc,EAAE,IAAa;IAC7D,MAAM,SAAS,IAAI;IACnB,IAAI,OAAO,OAAO,MAAM,CAAC,SAAS;IAClC,IAAI,MAAM,OAAO,MAAM,CAAC,QAAQ;IAChC,OAAO,MAAM,qBAA4B,YAAY,WAAW,EAAE;AACtE;AAEO,eAAe;IAClB,OAAO,MAAM,qBAA4B,WAAW,EAAE;AAC1D;;;IA7BsB;IAoBA;IAOA;;AA3BA,+OAAA;AAoBA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/jobs/my/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMyJobs as '00080ad4d3d7c09d052d456233d3bccbca0665fc6c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/jobs/my/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/jobs/my/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/jobs/my/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/jobs/my/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/jobs/my/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/jobs/my/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}