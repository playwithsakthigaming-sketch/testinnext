{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/date-utils.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Helper to parse the date/time string from events.json\nexport const parseEventDate = (dateTimeStr: string): Date | null => {\n    if (!dateTimeStr) return null;\n    \n    if (dateTimeStr.includes(' | ')) {\n        const parts = dateTimeStr.split(' | ');\n        const datePart = parts[0];\n        const timePart = parts[1];\n\n        const dateMatch = datePart.match(/(\\d{2})\\.(\\d{2})\\.(\\d{4})/);\n        if (!dateMatch) return null;\n        const [, day, month, year] = dateMatch.map(Number);\n\n        const timeMatch = timePart.match(/(\\d{2}):(\\d{2})/);\n        if (!timeMatch) return null;\n        const [hour, minute] = timeMatch.slice(1).map(Number);\n        \n        if (isNaN(day) || isNaN(month) || isNaN(year) || isNaN(hour) || isNaN(minute)) {\n        return null;\n        }\n        \n        return new Date(Date.UTC(year, month - 1, day, hour, minute));\n    }\n    \n    // Fallback for ISO string or other parsable formats\n    try {\n        const date = new Date(dateTimeStr);\n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n    } catch (e) {\n        return null;\n    }\n\n    return null;\n};\n\n\nconst timeSchema = z.object({\n  hour: z.string(),\n  minute: z.string(),\n  timezone: z.string(),\n});\n\nexport const parseDateTimeString = (dateTimeStr: string): { date: Date, time: z.infer<typeof timeSchema> } => {\n    const defaultTime = { hour: '13', minute: '00', timezone: 'UTC' };\n\n    if (!dateTimeStr) {\n        return { date: new Date(), time: defaultTime };\n    }\n\n    const date = parseEventDate(dateTimeStr);\n\n    if (date && !isNaN(date.getTime())) {\n         const hour = String(date.getUTCHours()).padStart(2, '0');\n         const minute = String(date.getUTCMinutes()).padStart(2, '0');\n         \n         const timePartMatch = dateTimeStr.match(/\\d{2}:\\d{2}\\s?(\\w+)?/);\n         const timezone = timePartMatch?.[1] || 'UTC';\n\n         return {\n             date: new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()),\n             time: { hour, minute, timezone }\n         };\n    }\n    \n    return {\n        date: new Date(),\n        time: defaultTime\n    };\n}\n\n\n// Helper to format date and time from an ISO string\nexport const formatDateTimeFromISO = (isoString: string): string => {\n    if (!isoString || isoString.includes('NaN')) {\n      return 'TBD';\n    }\n    try {\n        const date = new Date(isoString);\n        if (isNaN(date.getTime())) {\n            return 'TBD';\n        }\n        const day = String(date.getUTCDate()).padStart(2, '0');\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n        const year = date.getUTCFullYear();\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minute = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n    } catch (e) {\n        return 'TBD';\n    }\n};\n"],"names":[],"mappings":";;;;;AACA;;AAGO,MAAM,iBAAiB,CAAC;IAC3B,IAAI,CAAC,aAAa,OAAO;IAEzB,IAAI,YAAY,QAAQ,CAAC,QAAQ;QAC7B,MAAM,QAAQ,YAAY,KAAK,CAAC;QAChC,MAAM,WAAW,KAAK,CAAC,EAAE;QACzB,MAAM,WAAW,KAAK,CAAC,EAAE;QAEzB,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,GAAG,KAAK,OAAO,KAAK,GAAG,UAAU,GAAG,CAAC;QAE3C,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;QAE9C,IAAI,MAAM,QAAQ,MAAM,UAAU,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS;YAC/E,OAAO;QACP;QAEA,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,MAAM;IACzD;IAEA,oDAAoD;IACpD,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;YACxB,OAAO;QACX;IACJ,EAAE,OAAO,GAAG;QACR,OAAO;IACX;IAEA,OAAO;AACX;AAGA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEO,MAAM,sBAAsB,CAAC;IAChC,MAAM,cAAc;QAAE,MAAM;QAAM,QAAQ;QAAM,UAAU;IAAM;IAEhE,IAAI,CAAC,aAAa;QACd,OAAO;YAAE,MAAM,IAAI;YAAQ,MAAM;QAAY;IACjD;IAEA,MAAM,OAAO,eAAe;IAE5B,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,KAAK;QAC/B,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QAExD,MAAM,gBAAgB,YAAY,KAAK,CAAC;QACxC,MAAM,WAAW,eAAe,CAAC,EAAE,IAAI;QAEvC,OAAO;YACH,MAAM,IAAI,KAAK,KAAK,cAAc,IAAI,KAAK,WAAW,IAAI,KAAK,UAAU;YACzE,MAAM;gBAAE;gBAAM;gBAAQ;YAAS;QACnC;IACL;IAEA,OAAO;QACH,MAAM,IAAI;QACV,MAAM;IACV;AACJ;AAIO,MAAM,wBAAwB,CAAC;IAClC,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC,QAAQ;QAC3C,OAAO;IACT;IACA,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,MAAM,KAAK,OAAO,KAAK;YACvB,OAAO;QACX;QACA,MAAM,MAAM,OAAO,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG;QAClD,MAAM,QAAQ,OAAO,KAAK,WAAW,KAAK,GAAG,QAAQ,CAAC,GAAG;QACzD,MAAM,OAAO,KAAK,cAAc;QAChC,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QACxD,OAAO,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;IAC5D,EAAE,OAAO,GAAG;QACR,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/events/page.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { useState } from 'react';\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport eventsData from '@/lib/events.json';\nimport { useRouter } from 'next/navigation';\nimport { parseEventDate } from '@/lib/date-utils';\nimport { Button } from '@/components/ui/button';\nimport { X } from 'lucide-react';\n\ntype CalendarEvent = {\n    title: string;\n    start: Date;\n    allDay: boolean;\n    extendedProps: {\n        id: string;\n    };\n    backgroundColor: string;\n    borderColor: string;\n};\n\n\nexport default function DriverHubEventsPage() {\n    const router = useRouter();\n\n    const formattedEvents: CalendarEvent[] = eventsData.events.map(event => {\n        const start = parseEventDate(event.meetupTime);\n        const isInternal = event.type === 'internal';\n\n        return {\n            title: event.title,\n            start: start || new Date(event.date),\n            allDay: false, // Assuming events are at specific times\n            extendedProps: { id: event.id },\n            backgroundColor: isInternal ? 'hsl(var(--primary))' : 'hsl(var(--secondary))',\n            borderColor: isInternal ? 'hsl(var(--primary))' : 'hsl(var(--secondary))',\n        };\n    }).filter(e => e.start !== null);\n\n    const handleEventClick = (clickInfo: any) => {\n        const eventId = clickInfo.event.extendedProps.id;\n        router.push(`/driver-hub/events/${eventId}`);\n    };\n\n    return (\n        <div className=\"p-4 md:p-8\">\n            <Card>\n                <CardContent className=\"p-4\">\n                     <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin]}\n                        initialView=\"dayGridMonth\"\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay closeButton'\n                        }}\n                        customButtons={{\n                            closeButton: {\n                                text: 'Close',\n                                click: () => router.push('/driver-hub'),\n                            },\n                        }}\n                        events={formattedEvents}\n                        eventClick={handleEventClick}\n                        height=\"auto\"\n                        contentHeight=\"auto\"\n                        aspectRatio={1.5}\n                        eventTimeFormat={{\n                            hour: 'numeric',\n                            minute: '2-digit',\n                            meridiem: 'short'\n                        }}\n                     />\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;AAyBe,SAAS;;IACpB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,kBAAmC,4FAAA,CAAA,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAC3D,MAAM,QAAQ,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,UAAU;QAC7C,MAAM,aAAa,MAAM,IAAI,KAAK;QAElC,OAAO;YACH,OAAO,MAAM,KAAK;YAClB,OAAO,SAAS,IAAI,KAAK,MAAM,IAAI;YACnC,QAAQ;YACR,eAAe;gBAAE,IAAI,MAAM,EAAE;YAAC;YAC9B,iBAAiB,aAAa,wBAAwB;YACtD,aAAa,aAAa,wBAAwB;QACtD;IACJ,GAAG,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK;IAE3B,MAAM,mBAAmB,CAAC;QACtB,MAAM,UAAU,UAAU,KAAK,CAAC,aAAa,CAAC,EAAE;QAChD,OAAO,IAAI,CAAC,CAAC,mBAAmB,EAAE,SAAS;IAC/C;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,mIAAA,CAAA,OAAI;sBACD,cAAA,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;0BAClB,cAAA,6LAAC,2JAAA,CAAA,UAAY;oBACV,SAAS;wBAAC,qJAAA,CAAA,UAAa;wBAAE,sJAAA,CAAA,UAAc;qBAAC;oBACxC,aAAY;oBACZ,eAAe;wBACX,MAAM;wBACN,QAAQ;wBACR,OAAO;oBACX;oBACA,eAAe;wBACX,aAAa;4BACT,MAAM;4BACN,OAAO,IAAM,OAAO,IAAI,CAAC;wBAC7B;oBACJ;oBACA,QAAQ;oBACR,YAAY;oBACZ,QAAO;oBACP,eAAc;oBACd,aAAa;oBACb,iBAAiB;wBACb,MAAM;wBACN,QAAQ;wBACR,UAAU;oBACd;;;;;;;;;;;;;;;;;;;;;AAMxB;GAvDwB;;QACL,qIAAA,CAAA,YAAS;;;KADJ","debugId":null}}]
}