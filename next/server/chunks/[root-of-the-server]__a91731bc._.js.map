{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/truckersmp/route.ts"],"sourcesContent":["\n'use server';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { unstable_cache as cache } from 'next/cache';\n\nconst getTruckersMPData = cache(\n    async (endpoint: string) => {\n        const truckersMPUrl = `https://api.truckersmp.com/v2/${endpoint}`;\n        \n        try {\n            const apiResponse = await fetch(truckersMPUrl, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (!apiResponse.ok) {\n                const errorBody = await apiResponse.text();\n                console.error(`TruckersMP API error: ${apiResponse.status} ${errorBody}`);\n                return { error: `Error from TruckersMP API: ${apiResponse.statusText}`, status: apiResponse.status };\n            }\n\n            const data = await apiResponse.json();\n            return { data };\n        } catch (error) {\n            console.error('Failed to fetch from TruckersMP API:', error);\n            return { error: 'Failed to fetch from TruckersMP API', status: 500 };\n        }\n    },\n    ['truckersmp-api'],\n    { revalidate: 60 } // Revalidate every 60 seconds\n);\n\n\nexport async function GET(req: NextRequest) {\n    const searchParams = req.nextUrl.searchParams;\n    const endpoint = searchParams.get('endpoint');\n\n    if (!endpoint) {\n        return new NextResponse('Missing endpoint parameter', { status: 400 });\n    }\n\n    const result = await getTruckersMPData(endpoint);\n\n    if (result.error) {\n        return new NextResponse(result.error, { status: result.status });\n    }\n\n    return NextResponse.json(result.data);\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;;;;;;AAEA,MAAM,oBAAoB,CAAA,GAAA,+HAAA,CAAA,iBAAK,AAAD,EAC1B,OAAO;IACH,MAAM,gBAAgB,CAAC,8BAA8B,EAAE,UAAU;IAEjE,IAAI;QACA,MAAM,cAAc,MAAM,MAAM,eAAe;YAC3C,SAAS;gBACL,gBAAgB;YACpB;QACJ;QAEA,IAAI,CAAC,YAAY,EAAE,EAAE;YACjB,MAAM,YAAY,MAAM,YAAY,IAAI;YACxC,QAAQ,KAAK,CAAC,CAAC,sBAAsB,EAAE,YAAY,MAAM,CAAC,CAAC,EAAE,WAAW;YACxE,OAAO;gBAAE,OAAO,CAAC,2BAA2B,EAAE,YAAY,UAAU,EAAE;gBAAE,QAAQ,YAAY,MAAM;YAAC;QACvG;QAEA,MAAM,OAAO,MAAM,YAAY,IAAI;QACnC,OAAO;YAAE;QAAK;IAClB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO;YAAE,OAAO;YAAuC,QAAQ;QAAI;IACvE;AACJ,GACA;IAAC;CAAiB,EAClB;IAAE,YAAY;AAAG,EAAE,8BAA8B;;AAI9C,eAAe,IAAI,GAAgB;IACtC,MAAM,eAAe,IAAI,OAAO,CAAC,YAAY;IAC7C,MAAM,WAAW,aAAa,GAAG,CAAC;IAElC,IAAI,CAAC,UAAU;QACX,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,8BAA8B;YAAE,QAAQ;QAAI;IACxE;IAEA,MAAM,SAAS,MAAM,kBAAkB;IAEvC,IAAI,OAAO,KAAK,EAAE;QACd,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,OAAO,KAAK,EAAE;YAAE,QAAQ,OAAO,MAAM;QAAC;IAClE;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI;AACxC;;;IAfsB;;AAAA,iPAAA","debugId":null}}]
}