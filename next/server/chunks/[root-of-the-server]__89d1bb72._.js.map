{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/truckershub/route.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n    const searchParams = req.nextUrl.searchParams;\n    const endpoint = searchParams.get('endpoint');\n\n    if (!endpoint) {\n        return new NextResponse('Missing endpoint parameter', { status: 400 });\n    }\n\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        return new NextResponse('API key is not configured on the server', { status: 500 });\n    }\n\n    // Rebuild the query string for the API call, excluding the 'endpoint' param\n    const apiParams = new URLSearchParams();\n    searchParams.forEach((value, key) => {\n        if (key !== 'endpoint') {\n            apiParams.append(key, value);\n        }\n    });\n\n    const queryString = apiParams.toString();\n    const truckersHubUrl = `https://api.truckershub.in/v1/${endpoint}${queryString ? `?${queryString}` : ''}`;\n    \n    try {\n        const apiResponse = await fetch(truckersHubUrl, {\n            headers: {\n                'Authorization': apiKey,\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!apiResponse.ok) {\n            const errorBody = await apiResponse.text();\n            console.error(`TruckersHub API error: ${apiResponse.status} ${errorBody}`);\n            return new NextResponse(`Error from TruckersHub API: ${apiResponse.statusText}`, { status: apiResponse.status });\n        }\n\n        const data = await apiResponse.json();\n        return NextResponse.json(data);\n\n    } catch (error) {\n        console.error('Failed to fetch from TruckersHub API:', error);\n        return new NextResponse('Failed to fetch from TruckersHub API', { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,eAAe,IAAI,GAAgB;IACtC,MAAM,eAAe,IAAI,OAAO,CAAC,YAAY;IAC7C,MAAM,WAAW,aAAa,GAAG,CAAC;IAElC,IAAI,CAAC,UAAU;QACX,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,8BAA8B;YAAE,QAAQ;QAAI;IACxE;IAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC9C,IAAI,CAAC,QAAQ;QACT,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,2CAA2C;YAAE,QAAQ;QAAI;IACrF;IAEA,4EAA4E;IAC5E,MAAM,YAAY,IAAI;IACtB,aAAa,OAAO,CAAC,CAAC,OAAO;QACzB,IAAI,QAAQ,YAAY;YACpB,UAAU,MAAM,CAAC,KAAK;QAC1B;IACJ;IAEA,MAAM,cAAc,UAAU,QAAQ;IACtC,MAAM,iBAAiB,CAAC,8BAA8B,EAAE,WAAW,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAAI;IAEzG,IAAI;QACA,MAAM,cAAc,MAAM,MAAM,gBAAgB;YAC5C,SAAS;gBACL,iBAAiB;gBACjB,gBAAgB;YACpB;QACJ;QAEA,IAAI,CAAC,YAAY,EAAE,EAAE;YACjB,MAAM,YAAY,MAAM,YAAY,IAAI;YACxC,QAAQ,KAAK,CAAC,CAAC,uBAAuB,EAAE,YAAY,MAAM,CAAC,CAAC,EAAE,WAAW;YACzE,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,CAAC,4BAA4B,EAAE,YAAY,UAAU,EAAE,EAAE;gBAAE,QAAQ,YAAY,MAAM;YAAC;QAClH;QAEA,MAAM,OAAO,MAAM,YAAY,IAAI;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE7B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yCAAyC;QACvD,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,wCAAwC;YAAE,QAAQ;QAAI;IAClF;AACJ","debugId":null}}]
}