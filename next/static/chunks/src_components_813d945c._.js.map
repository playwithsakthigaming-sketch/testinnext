{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/stat-card.tsx"],"sourcesContent":["\n'use client';\n\nimport { Card, CardContent } from '@/components/ui/card';\nimport { cn } from '@/lib/utils';\nimport { AreaChart, Area, ResponsiveContainer } from 'recharts';\n\ntype StatCardProps = {\n    icon: React.ReactNode;\n    title: string;\n    value: string | number;\n    chartData?: any[];\n    chartColor: string;\n    iconBgColor: string;\n    hasChart?: boolean;\n};\n\nconst StatCard = ({ icon, title, value, chartData, chartColor, iconBgColor, hasChart = false }: StatCardProps) => {\n    return (\n        <Card className=\"bg-card/80 backdrop-blur-sm border-border/20 shadow-lg\">\n            <CardContent className=\"p-4\">\n                <div className=\"flex justify-between items-start\">\n                    <div>\n                        <p className=\"text-2xl font-bold\">{value}</p>\n                        <p className=\"text-sm text-muted-foreground\">{title}</p>\n                    </div>\n                    <div className={cn(\"p-2 rounded-lg\", iconBgColor)}>\n                       {icon}\n                    </div>\n                </div>\n                {hasChart && chartData && (\n                    <div className=\"h-16 mt-2\">\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                            <AreaChart data={chartData} margin={{ top: 5, right: 0, left: 0, bottom: 0 }}>\n                                <defs>\n                                    <linearGradient id={`color-${title.replace(/\\s+/g, '')}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                        <stop offset=\"5%\" stopColor={chartColor} stopOpacity={0.4}/>\n                                        <stop offset=\"95%\" stopColor={chartColor} stopOpacity={0}/>\n                                    </linearGradient>\n                                </defs>\n                                <Area\n                                    type=\"monotone\"\n                                    dataKey=\"value\"\n                                    stroke={chartColor}\n                                    strokeWidth={2}\n                                    fillOpacity={1}\n                                    fill={`url(#color-${title.replace(/\\s+/g, '')})`}\n                                />\n                            </AreaChart>\n                        </ResponsiveContainer>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default StatCard;\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AAAA;AAJA;;;;;AAgBA,MAAM,WAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,KAAK,EAAiB;IACzG,qBACI,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;kBACZ,cAAA,6LAAC,mIAAA,CAAA,cAAW;YAAC,WAAU;;8BACnB,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;;8CACG,6LAAC;oCAAE,WAAU;8CAAsB;;;;;;8CACnC,6LAAC;oCAAE,WAAU;8CAAiC;;;;;;;;;;;;sCAElD,6LAAC;4BAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kBAAkB;sCACjC;;;;;;;;;;;;gBAGP,YAAY,2BACT,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACrC,cAAA,6LAAC,wJAAA,CAAA,YAAS;4BAAC,MAAM;4BAAW,QAAQ;gCAAE,KAAK;gCAAG,OAAO;gCAAG,MAAM;gCAAG,QAAQ;4BAAE;;8CACvE,6LAAC;8CACG,cAAA,6LAAC;wCAAe,IAAI,CAAC,MAAM,EAAE,MAAM,OAAO,CAAC,QAAQ,KAAK;wCAAE,IAAG;wCAAI,IAAG;wCAAI,IAAG;wCAAI,IAAG;;0DAC9E,6LAAC;gDAAK,QAAO;gDAAK,WAAW;gDAAY,aAAa;;;;;;0DACtD,6LAAC;gDAAK,QAAO;gDAAM,WAAW;gDAAY,aAAa;;;;;;;;;;;;;;;;;8CAG/D,6LAAC,uJAAA,CAAA,OAAI;oCACD,MAAK;oCACL,SAAQ;oCACR,QAAQ;oCACR,aAAa;oCACb,aAAa;oCACb,MAAM,CAAC,WAAW,EAAE,MAAM,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASpF;KAtCM;uCAwCS","debugId":null}}]
}