{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\nconst applicationSchemaBase = z.object({\n    name: z.string().min(1, 'Name is required'),\n    discordTag: z.string().min(1, 'Discord Tag is required'),\n    email: z.string().email('Invalid email address'),\n    steamUrl: z.string().url('Invalid Steam profile URL. Please enter a full URL.'),\n    experience: z.enum(['fresher', 'experienced'], {\n        errorMap: () => ({ message: 'Please select your experience level' }),\n    }),\n    howYouFound: z.enum(['truckersmp', 'friends', 'others'], {\n        errorMap: () => ({ message: 'Please select an option' }),\n    }),\n    friendsMention: z.string().optional(),\n    othersMention: z.string().optional(),\n    terms: z.literal<boolean>(true, {\n        errorMap: () => ({ message: 'You must accept the terms and conditions' }),\n    }),\n});\n\nconst refinedApplicationSchema = applicationSchemaBase.superRefine((data, ctx) => {\n    if (data.howYouFound === 'friends' && (!data.friendsMention || data.friendsMention.trim().length === 0)) {\n        ctx.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: 'Please mention your friend(s)',\n            path: ['friendsMention'],\n        });\n    }\n    if (data.howYouFound === 'others' && (!data.othersMention || data.othersMention.trim().length === 0)) {\n        ctx.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: 'Please specify how you found us',\n            path: ['othersMention'],\n        });\n    }\n});\n\nexport const applicationSchema = refinedApplicationSchema;\n\nexport type ApplicationData = z.infer<typeof applicationSchema>;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC9B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACzB,YAAY,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAc,EAAE;QAC3C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAsC,CAAC;IACvE;IACA,aAAa,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAc;QAAW;KAAS,EAAE;QACrD,UAAU,IAAM,CAAC;gBAAE,SAAS;YAA0B,CAAC;IAC3D;IACA,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACnC,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,OAAO,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAU,MAAM;QAC5B,UAAU,IAAM,CAAC;gBAAE,SAAS;YAA2C,CAAC;IAC5E;AACJ;AAEA,MAAM,2BAA2B,sBAAsB,WAAW,CAAC,CAAC,MAAM;IACtE,IAAI,KAAK,WAAW,KAAK,aAAa,CAAC,CAAC,KAAK,cAAc,IAAI,KAAK,cAAc,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG;QACrG,IAAI,QAAQ,CAAC;YACT,MAAM,oIAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;YAC3B,SAAS;YACT,MAAM;gBAAC;aAAiB;QAC5B;IACJ;IACA,IAAI,KAAK,WAAW,KAAK,YAAY,CAAC,CAAC,KAAK,aAAa,IAAI,KAAK,aAAa,CAAC,IAAI,GAAG,MAAM,KAAK,CAAC,GAAG;QAClG,IAAI,QAAQ,CAAC;YACT,MAAM,oIAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;YAC3B,SAAS;YACT,MAAM;gBAAC;aAAgB;QAC3B;IACJ;AACJ;AAEO,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { applicationSchema, type ApplicationData } from '@/lib/schemas';\n\nexport type SubmitResult = {\n    success: boolean;\n    message: string;\n    applicationId?: string;\n    errors?: Record<string, string[] | undefined>;\n}\n\n// In a real application, you would use a database to generate a unique sequential ID.\n// For this prototype, we'll generate a random one.\nfunction generateApplicationId() {\n    const randomNumber = Math.floor(Math.random() * 9000) + 1000;\n    return `TP-${randomNumber}`;\n}\n\nexport async function submitApplication(data: ApplicationData): Promise<SubmitResult> {\n    const validation = applicationSchema.safeParse(data);\n\n    if (!validation.success) {\n        return {\n            success: false,\n            message: 'Invalid form data.',\n            errors: validation.error.flatten().fieldErrors,\n        };\n    }\n\n    const { name, discordTag, email, steamUrl, experience, howYouFound, friendsMention, othersMention } = validation.data;\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n    const applicationId = generateApplicationId();\n\n    if (!webhookUrl) {\n        console.error('DISCORD_WEBHOOK_URL is not set in .env file');\n        return { success: false, message: 'Server configuration error.' };\n    }\n\n    let howFoundValue = howYouFound;\n    if (howYouFound === 'friends' && friendsMention) {\n        howFoundValue = `Friends: ${friendsMention}`;\n    } else if (howYouFound === 'others' && othersMention) {\n        howFoundValue = `Others: ${othersMention}`;\n    }\n\n\n    const embed = {\n        title: `New VTC Application - ${applicationId}`,\n        color: 3977201, // Medium Sea Green\n        fields: [\n            { name: 'Name', value: name, inline: true },\n            { name: 'Discord Tag', value: discordTag, inline: true },\n            { name: 'Email', value: email, inline: true },\n            { name: 'Steam Profile', value: steamUrl, inline: false },\n            { name: 'Experience', value: experience },\n            { name: 'How they found us', value: howFoundValue },\n        ],\n        timestamp: new Date().toISOString(),\n        footer: {\n            text: 'Tamil Pasanga VTC Application',\n        },\n    };\n    \n    const payload = {\n        content: `New application from ${name}`,\n        embeds: [embed],\n        components: [\n          {\n            type: 1, // Action Row\n            components: [\n              {\n                type: 2, // Button\n                style: 3, // Success\n                label: 'Accept',\n                custom_id: `accept_${applicationId}`,\n              },\n              {\n                type: 2, // Button\n                style: 4, // Danger\n                label: 'Reject',\n                custom_id: `reject_${applicationId}`,\n              },\n              {\n                type: 2, // Button\n                style: 1, // Primary\n                label: 'Accept for Interview',\n                custom_id: `interview_${applicationId}`,\n              },\n            ],\n          },\n        ],\n    };\n\n    try {\n        const response = await fetch(webhookUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        });\n\n        if (!response.ok) {\n            console.error(`Discord webhook failed with status: ${response.status}`);\n            const errorBody = await response.text();\n            console.error('Error body:', errorBody);\n            return { success: false, message: 'Failed to submit application.' };\n        }\n\n        return { success: true, message: 'Application submitted successfully!', applicationId };\n    } catch (error) {\n        console.error('Error submitting application to Discord:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n\nexport type ApplicationStatusResult = {\n    applicationId: string;\n    status: 'Pending' | 'Accepted' | 'Rejected' | 'Interview' | 'Not Found';\n};\n\nexport async function getApplicationStatus(\n  applicationId: string\n): Promise<ApplicationStatusResult> {\n    const validIdRegex = /^TP-\\d{4}$/;\n    if (!validIdRegex.test(applicationId)) {\n        return { applicationId, status: 'Not Found' };\n    }\n\n    // For testing, return a status based on the last digit of the ID\n    const lastDigit = parseInt(applicationId.slice(-1), 10);\n\n    if (lastDigit >= 0 && lastDigit <= 3) {\n        return { applicationId, status: 'Pending' };\n    } else if (lastDigit >= 4 && lastDigit <= 6) {\n        return { applicationId, status: 'Accepted' };\n    } else if (lastDigit === 7) {\n        return { applicationId, status: 'Interview' };\n    } else {\n        return { applicationId, status: 'Rejected' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/gallery/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitApplication as '40f1f199a825c96ed8f20260f98df34feda717d01a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/gallery/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/gallery/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/gallery/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/gallery/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/gallery/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/gallery/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwQ,GACrS,sCACA","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}