{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver, Driver, Skill, DriverSkill, Route, LiveDelivery } from '@/lib/truckershub-types';\n\nconst VTC_ID = '1600';\n\ntype ApiResponse<T> = {\n    status?: boolean;\n    response?: T;\n    drivers?: Driver[]; // for drivers endpoint\n    jobs?: Job[]; // for jobs endpoint\n    skills?: Skill[] | DriverSkill[]; // for skills endpoint\n    routes?: Route[];\n    vtc?: { jobs?: Job[], drivers?: Driver[], deliveries?: LiveDelivery[], drivers_live?: LiveDriver[] }; // for vtc/ endpoints\n};\n\n// This function should be executed on the server where process.env is available.\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<T | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`https://api.truckershub.in/v1/${endpoint}`);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        const res = await fetch(url.toString(), {\n             headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'User-Agent': 'TamilPasangaVTC/1.0',\n            },\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: any = await res.json();\n        \n        if (data) {\n             if (endpoint.startsWith('vtc/')) {\n                if (data.vtc) {\n                    if (endpoint.endsWith('/jobs')) return data.vtc.jobs as T;\n                    if (endpoint.endsWith('/drivers')) return data.vtc.drivers as T;\n                    if (endpoint.endsWith('/deliveries/live')) return data.vtc.deliveries as T;\n                    if (endpoint.endsWith('/drivers/live')) return data.vtc.drivers_live as T;\n                    return data.vtc as T;\n                }\n             }\n            if (data.response) return data.response as T;\n            if (data.jobs) return data.jobs as T;\n            if (data.drivers) return data.drivers as T;\n            if (data.skills) return { skills: data.skills } as T;\n            if (data.routes) return data.routes as T;\n            if (Array.isArray(data)) return data as T;\n            if (data.status === false) {\n                 if (Object.keys(data).length > 2 || (endpoint !== 'live/delivery' && !endpoint.includes('vtc'))) { \n                    console.warn(`TruckersHub API returned status false for ${endpoint}:`, JSON.stringify(data));\n                 }\n                 return null;\n            }\n            return data as T;\n        }\n        \n        return null;\n\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nexport async function getDashboardData() {\n    try {\n        const [statsData, allTime, monthly, jobs, liveDrivers] = await Promise.all([\n            fetchFromTruckersHub<VtcStats>(`vtc/${VTC_ID}`),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/alltime'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/monthly'),\n            fetchFromTruckersHub<Job[]>(`vtc/${VTC_ID}/jobs`),\n            fetchFromTruckersHub<LiveDriver[]>(`vtc/${VTC_ID}/drivers/live`),\n        ]);\n        \n        const recentJobs = jobs || [];\n        \n        return { stats: statsData, allTime, monthly, jobs: recentJobs, liveDrivers };\n    } catch (error) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        return { stats: null, allTime: null, monthly: null, jobs: null, liveDrivers: null };\n    }\n}\n\nexport async function getAllVtcJobs(month?: string, year?: string): Promise<Job[]> {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    const data = await fetchFromTruckersHub<Job[]>(`vtc/${VTC_ID}/jobs`, params);\n    return data || [];\n}\n\nexport async function getMyJobs(steamId: string): Promise<Job[]> {\n    const data = await fetchFromTruckersHub<Job[]>(`drivers/${steamId}/jobs`);\n    return data || [];\n}\n\nexport async function getJobDetails(jobId: string): Promise<Job | null> {\n    const data = await fetchFromTruckersHub<{ response: Job }>(`jobs/${jobId}`);\n    return data?.response ?? null;\n}\n\nexport async function getDrivers(): Promise<Driver[]> {\n    const data = await fetchFromTruckersHub<Driver[]>(`vtc/${VTC_ID}/drivers`);\n    return Array.isArray(data) ? data : [];\n}\n\nexport async function getRoutes(): Promise<Route[]> {\n    return await fetchFromTruckersHub<Route[]>(`vtc/${VTC_ID}/routes`) || [];\n}\n\nexport async function getAvailableSkills(): Promise<Skill[]> {\n    const response = await fetchFromTruckersHub<{ skills: Skill[] }>('skills');\n    return response?.skills || [];\n}\n\nexport async function getDriverSkills(steamId: string): Promise<DriverSkill[] | null> {\n    const response = await fetchFromTruckersHub<{ skills: DriverSkill[] }>(`skills/${steamId}`);\n    return response?.skills || null;\n}\n\nexport async function updateDriverSkills(steamId: string, skills: { id: string, level: number }[]): Promise<{ success: boolean; message?: string }> {\n    const payload = skills.reduce((acc, skill) => {\n        acc[skill.id] = skill.level;\n        return acc;\n    }, {} as Record<string, number>);\n\n    const response: any = await fetchFromTruckersHub(`skills/${steamId}`, new URLSearchParams({\n        method: 'POST',\n        body: JSON.stringify(payload),\n    } as any));\n    \n    if (response && response.status) {\n         return { success: true };\n    }\n\n    return { success: false, message: 'Failed to update skills. The API did not return a success status.' };\n}\n\nexport async function getLiveDrivers(): Promise<LiveDriver[]> {\n    const data = await fetchFromTruckersHub<LiveDriver[]>(`vtc/${VTC_ID}/drivers/live`);\n    return Array.isArray(data) ? data : [];\n}\n\nexport async function getLiveDeliveries(): Promise<LiveDelivery[]> {\n    const data = await fetchFromTruckersHub<LiveDelivery[]>(`vtc/${VTC_ID}/deliveries/live`);\n     return data || [];\n}\n\n\n\n\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/live-map/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getLiveDrivers as '005c4aca74e95a78a5d7582311757fb35021d9dcc1'} from 'ACTIONS_MODULE0'\nexport {getLiveDeliveries as '0075f4d46f41b2ac7c97ae608d6fc48a4772b8902c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/live-map/live-map-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LiveMapClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LiveMapClient() from the server but LiveMapClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/live-map/live-map-client.tsx <module evaluation>\",\n    \"LiveMapClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iFACA","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/live-map/live-map-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LiveMapClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call LiveMapClient() from the server but LiveMapClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/live-map/live-map-client.tsx\",\n    \"LiveMapClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,6DACA","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/live-map/page.tsx"],"sourcesContent":["\nimport { LiveMapClient } from './live-map-client';\n\nexport default function LiveMapPage() {\n    return (\n        <div className=\"h-[calc(100vh_-_var(--header-height,4rem))]\">\n            <LiveMapClient />\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACpB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,oKAAA,CAAA,gBAAa;;;;;;;;;;AAG1B","debugId":null}}]
}