{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/jobs/all/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2, Package, MapPin, CheckCircle, AlertTriangle, PlayCircle } from \"lucide-react\";\nimport Image from \"next/image\";\nimport Link from 'next/link';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\ntype Job = {\n    id: number;\n    driver: {\n        id: number;\n        username: string;\n        avatar: string;\n    };\n    start_city: string;\n    start_company: string;\n    destination_city: string;\n    destination_company: string;\n    cargo: string;\n    cargo_mass: number;\n    distance: number;\n    fuel_used: number;\n    money_made: number;\n    status: 'finished' | 'ongoing' | 'cancelled';\n    xp: number;\n    max_speed: number;\n    average_speed: number;\n    damage: number;\n};\n\ntype ApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\nasync function getJobs(month?: string, year?: string): Promise<Job[]> {\n    try {\n        const params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        \n        const queryString = params.toString();\n        const url = `/api/truckershub?endpoint=jobs/all${queryString ? `&${queryString}` : ''}`;\n        \n        const res = await fetch(url);\n\n        if (!res.ok) {\n            console.error(\"Failed to fetch jobs:\", res.status, await res.text());\n            return [];\n        }\n\n        const data: ApiResponse = await res.json();\n        \n        if (data && data.status) {\n            if (Array.isArray(data.response)) {\n                return data.response;\n            }\n            if (typeof data.response === 'object' && Object.keys(data.response).length === 0) {\n                return [];\n            }\n        }\n        \n        // Avoid logging an error for an empty object response, which means no jobs\n        if (typeof data.response === 'object' && Object.keys(data.response).length > 0) {\n             console.error(\"Invalid API response structure for jobs:\", data);\n        }\n        return [];\n\n    } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n        return [];\n    }\n}\n\nconst statusConfig = {\n    finished: { icon: <CheckCircle className=\"text-green-500\" />, label: \"Finished\" },\n    ongoing: { icon: <PlayCircle className=\"text-blue-500\" />, label: \"Ongoing\" },\n    cancelled: { icon: <AlertTriangle className=\"text-red-500\" />, label: \"Cancelled\" },\n};\n\nconst months = [\n    { value: '1', label: 'January' }, { value: '2', label: 'February' },\n    { value: '3', label: 'March' }, { value: '4', label: 'April' },\n    { value: '5', label: 'May' }, { value: '6', label: 'June' },\n    { value: '7', label: 'July' }, { value: '8', label: 'August' },\n    { value: '9', label: 'September' }, { value: '10', label: 'October' },\n    { value: '11', label: 'November' }, { value: '12', label: 'December' }\n];\n\nconst years = Array.from({ length: 5 }, (_, i) => String(new Date().getFullYear() - i));\n\n\nexport default function AllJobsPage() {\n    const [jobs, setJobs] = useState<Job[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [month, setMonth] = useState<string | undefined>(undefined);\n    const [year, setYear] = useState<string | undefined>(undefined);\n\n    const fetchJobs = async (m?: string, y?: string) => {\n        setIsLoading(true);\n        const jobsData = await getJobs(m, y);\n        setJobs(jobsData);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        fetchJobs();\n    }, []);\n\n    const handleFilter = () => {\n        fetchJobs(month, year);\n    };\n\n    return (\n        <div className=\"p-4 md:p-8\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>All Jobs</CardTitle>\n                    <CardDescription>A list of all jobs submitted by drivers in the VTC.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\n                        <Select value={month} onValueChange={setMonth}>\n                            <SelectTrigger className=\"w-full md:w-[180px]\">\n                                <SelectValue placeholder=\"Select Month\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {months.map(m => <SelectItem key={m.value} value={m.value}>{m.label}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                        <Select value={year} onValueChange={setYear}>\n                            <SelectTrigger className=\"w-full md:w-[180px]\">\n                                <SelectValue placeholder=\"Select Year\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {years.map(y => <SelectItem key={y} value={y}>{y}</SelectItem>)}\n                            </SelectContent>\n                        </Select>\n                        <Button onClick={handleFilter} disabled={isLoading}>\n                            {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Filter\n                        </Button>\n                    </div>\n\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Driver</TableHead>\n                                <TableHead>Route</TableHead>\n                                <TableHead>Cargo</TableHead>\n                                <TableHead>Distance</TableHead>\n                                <TableHead>NXP</TableHead>\n                                <TableHead>Damage</TableHead>\n                                <TableHead>Status</TableHead>\n                                <TableHead className=\"text-right\">Actions</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {isLoading ? (\n                                <TableRow>\n                                    <TableCell colSpan={8} className=\"text-center h-24\">\n                                        <Loader2 className=\"mx-auto h-8 w-8 animate-spin text-primary\" />\n                                    </TableCell>\n                                </TableRow>\n                            ) : jobs.length > 0 ? jobs.map((job) => (\n                                <TableRow key={job.id}>\n                                    <TableCell>\n                                        <div className=\"flex items-center gap-2\">\n                                            {job.driver && (\n                                                <>\n                                                    <Image src={job.driver.avatar} alt={job.driver.username} width={32} height={32} className=\"rounded-full\" />\n                                                    <span>{job.driver.username}</span>\n                                                </>\n                                            )}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell>\n                                        <div className=\"flex items-center gap-2\">\n                                            <MapPin size={16} className=\"text-muted-foreground\"/>\n                                            <span>{job.start_city} to {job.destination_city}</span>\n                                        </div>\n                                    </TableCell>\n                                    <TableCell>\n                                        <div className=\"flex items-center gap-2\">\n                                             <Package size={16} className=\"text-muted-foreground\"/>\n                                            <span>{job.cargo}</span>\n                                        </div>\n                                    </TableCell>\n                                    <TableCell>{job.distance.toLocaleString()} km</TableCell>\n                                    <TableCell>{job.xp}</TableCell>\n                                    <TableCell>\n                                        <Badge variant={job.damage > 0 ? \"destructive\" : \"default\"} className={job.damage === 0 ? \"bg-green-500\" : \"\"}>\n                                            {job.damage}%\n                                        </Badge>\n                                    </TableCell>\n                                    <TableCell>\n                                        <div className=\"flex items-center gap-2\">\n                                            {statusConfig[job.status]?.icon}\n                                            {statusConfig[job.status]?.label}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell className=\"text-right\">\n                                        <Button asChild variant=\"outline\" size=\"sm\">\n                                            <Link href={`/driver-hub/jobs/${job.id}`}>Details</Link>\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            )) : (\n                                <TableRow>\n                                    <TableCell colSpan={8} className=\"text-center\">\n                                        No jobs found.\n                                    </TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}