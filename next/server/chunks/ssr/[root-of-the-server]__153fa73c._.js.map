{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver, Driver, Skill, DriverSkill, Route, LiveDelivery } from '@/lib/truckershub-types';\n\nconst VTC_ID = '1600';\n\ntype ApiResponse<T> = {\n    status?: boolean;\n    response?: T;\n    drivers?: Driver[]; // for drivers endpoint\n    jobs?: Job[]; // for jobs endpoint\n    skills?: Skill[] | DriverSkill[]; // for skills endpoint\n    routes?: Route[];\n    vtc?: { jobs?: Job[], drivers?: Driver[], deliveries?: LiveDelivery[], drivers_live?: LiveDriver[] }; // for vtc/ endpoints\n};\n\n// This function should be executed on the server where process.env is available.\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<T | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`https://api.truckershub.in/v1/${endpoint}`);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        const res = await fetch(url.toString(), {\n             headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'User-Agent': 'TamilPasangaVTC/1.0',\n            },\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: any = await res.json();\n        \n        if (data) {\n             if (endpoint.startsWith('vtc/')) {\n                if (data.vtc) {\n                    if (endpoint.endsWith('/jobs')) return data.vtc.jobs as T;\n                    if (endpoint.endsWith('/drivers')) return data.vtc.drivers as T;\n                    if (endpoint.endsWith('/deliveries/live')) return data.vtc.deliveries as T;\n                    if (endpoint.endsWith('/drivers/live')) return data.vtc.drivers_live as T;\n                    return data.vtc as T;\n                }\n             }\n            if (data.response) return data.response as T;\n            if (data.jobs) return data.jobs as T;\n            if (data.drivers) return data.drivers as T;\n            if (data.skills) return { skills: data.skills } as T;\n            if (data.routes) return data.routes as T;\n            if (Array.isArray(data)) return data as T;\n            if (data.status === false) {\n                 if (Object.keys(data).length > 2 || (endpoint !== 'live/delivery' && !endpoint.includes('vtc'))) { \n                    console.warn(`TruckersHub API returned status false for ${endpoint}:`, JSON.stringify(data));\n                 }\n                 return null;\n            }\n            return data as T;\n        }\n        \n        return null;\n\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nexport async function getDashboardData() {\n    try {\n        const [statsData, allTime, monthly, jobs, liveDrivers] = await Promise.all([\n            fetchFromTruckersHub<VtcStats>(`vtc/${VTC_ID}`),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/alltime'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/monthly'),\n            fetchFromTruckersHub<Job[]>(`vtc/${VTC_ID}/jobs`),\n            fetchFromTruckersHub<LiveDriver[]>(`vtc/${VTC_ID}/drivers/live`),\n        ]);\n        \n        const recentJobs = jobs || [];\n        \n        return { stats: statsData, allTime, monthly, jobs: recentJobs, liveDrivers };\n    } catch (error) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        return { stats: null, allTime: null, monthly: null, jobs: null, liveDrivers: null };\n    }\n}\n\nexport async function getAllVtcJobs(month?: string, year?: string): Promise<Job[]> {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    const data = await fetchFromTruckersHub<Job[]>(`vtc/${VTC_ID}/jobs`, params);\n    return data || [];\n}\n\nexport async function getMyJobs(steamId: string): Promise<Job[]> {\n    const data = await fetchFromTruckersHub<Job[]>(`drivers/${steamId}/jobs`);\n    return data || [];\n}\n\nexport async function getJobDetails(jobId: string): Promise<Job | null> {\n    const data = await fetchFromTruckersHub<{ response: Job }>(`jobs/${jobId}`);\n    return data?.response ?? null;\n}\n\nexport async function getDrivers(): Promise<Driver[]> {\n    const data = await fetchFromTruckersHub<Driver[]>(`vtc/${VTC_ID}/drivers`);\n    return Array.isArray(data) ? data : [];\n}\n\nexport async function getRoutes(): Promise<Route[]> {\n    return await fetchFromTruckersHub<Route[]>(`vtc/${VTC_ID}/routes`) || [];\n}\n\nexport async function getAvailableSkills(): Promise<Skill[]> {\n    const response = await fetchFromTruckersHub<{ skills: Skill[] }>('skills');\n    return response?.skills || [];\n}\n\nexport async function getDriverSkills(steamId: string): Promise<DriverSkill[] | null> {\n    const response = await fetchFromTruckersHub<{ skills: DriverSkill[] }>(`skills/${steamId}`);\n    return response?.skills || null;\n}\n\nexport async function updateDriverSkills(steamId: string, skills: { id: string, level: number }[]): Promise<{ success: boolean; message?: string }> {\n    const payload = skills.reduce((acc, skill) => {\n        acc[skill.id] = skill.level;\n        return acc;\n    }, {} as Record<string, number>);\n\n    const response: any = await fetchFromTruckersHub(`skills/${steamId}`, new URLSearchParams({\n        method: 'POST',\n        body: JSON.stringify(payload),\n    } as any));\n    \n    if (response && response.status) {\n         return { success: true };\n    }\n\n    return { success: false, message: 'Failed to update skills. The API did not return a success status.' };\n}\n\nexport async function getLiveDrivers(): Promise<LiveDriver[]> {\n    const data = await fetchFromTruckersHub<LiveDriver[]>(`vtc/${VTC_ID}/drivers/live`);\n    return Array.isArray(data) ? data : [];\n}\n\nexport async function getLiveDeliveries(): Promise<LiveDelivery[]> {\n    const data = await fetchFromTruckersHub<LiveDelivery[]>(`vtc/${VTC_ID}/deliveries/live`);\n     return data || [];\n}\n\n\n\n\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAKA,MAAM,SAAS;AAYf,iFAAiF;AACjF,eAAe,qBAAwB,QAAgB,EAAE,MAAwB;IAC7E,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC9C,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IAEA,IAAI;QACA,MAAM,MAAM,IAAI,IAAI,CAAC,8BAA8B,EAAE,UAAU;QAC/D,IAAI,QAAQ;YACR,OAAO,OAAO,CAAC,CAAC,OAAO;gBACnB,IAAI,YAAY,CAAC,MAAM,CAAC,KAAK;YACjC;QACJ;QAEA,MAAM,MAAM,MAAM,MAAM,IAAI,QAAQ,IAAI;YACnC,SAAS;gBACN,iBAAiB,CAAC,OAAO,EAAE,QAAQ;gBACnC,gBAAgB;gBAChB,cAAc;YAClB;YACA,MAAM;gBAAE,YAAY;YAAI,EAAE,6BAA6B;QAC3D;QAGA,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;YAC3F,OAAO;QACX;QAEA,MAAM,OAAY,MAAM,IAAI,IAAI;QAEhC,IAAI,MAAM;YACL,IAAI,SAAS,UAAU,CAAC,SAAS;gBAC9B,IAAI,KAAK,GAAG,EAAE;oBACV,IAAI,SAAS,QAAQ,CAAC,UAAU,OAAO,KAAK,GAAG,CAAC,IAAI;oBACpD,IAAI,SAAS,QAAQ,CAAC,aAAa,OAAO,KAAK,GAAG,CAAC,OAAO;oBAC1D,IAAI,SAAS,QAAQ,CAAC,qBAAqB,OAAO,KAAK,GAAG,CAAC,UAAU;oBACrE,IAAI,SAAS,QAAQ,CAAC,kBAAkB,OAAO,KAAK,GAAG,CAAC,YAAY;oBACpE,OAAO,KAAK,GAAG;gBACnB;YACH;YACD,IAAI,KAAK,QAAQ,EAAE,OAAO,KAAK,QAAQ;YACvC,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,IAAI;YAC/B,IAAI,KAAK,OAAO,EAAE,OAAO,KAAK,OAAO;YACrC,IAAI,KAAK,MAAM,EAAE,OAAO;gBAAE,QAAQ,KAAK,MAAM;YAAC;YAC9C,IAAI,KAAK,MAAM,EAAE,OAAO,KAAK,MAAM;YACnC,IAAI,MAAM,OAAO,CAAC,OAAO,OAAO;YAChC,IAAI,KAAK,MAAM,KAAK,OAAO;gBACtB,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,GAAG,KAAM,aAAa,mBAAmB,CAAC,SAAS,QAAQ,CAAC,QAAS;oBAC9F,QAAQ,IAAI,CAAC,CAAC,0CAA0C,EAAE,SAAS,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC;gBACzF;gBACA,OAAO;YACZ;YACA,OAAO;QACX;QAEA,OAAO;IAEX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,SAAS,EAAE,CAAC,EAAE;QAChE,OAAO;IACX;AACJ;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,CAAC,WAAW,SAAS,SAAS,MAAM,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;YACvE,qBAA+B,CAAC,IAAI,EAAE,QAAQ;YAC9C,qBAAwC;YACxC,qBAAwC;YACxC,qBAA4B,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC;YAChD,qBAAmC,CAAC,IAAI,EAAE,OAAO,aAAa,CAAC;SAClE;QAED,MAAM,aAAa,QAAQ,EAAE;QAE7B,OAAO;YAAE,OAAO;YAAW;YAAS;YAAS,MAAM;YAAY;QAAY;IAC/E,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;YAAE,OAAO;YAAM,SAAS;YAAM,SAAS;YAAM,MAAM;YAAM,aAAa;QAAK;IACtF;AACJ;AAEO,eAAe,cAAc,KAAc,EAAE,IAAa;IAC7D,MAAM,SAAS,IAAI;IACnB,IAAI,OAAO,OAAO,MAAM,CAAC,SAAS;IAClC,IAAI,MAAM,OAAO,MAAM,CAAC,QAAQ;IAChC,MAAM,OAAO,MAAM,qBAA4B,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC,EAAE;IACrE,OAAO,QAAQ,EAAE;AACrB;AAEO,eAAe,UAAU,OAAe;IAC3C,MAAM,OAAO,MAAM,qBAA4B,CAAC,QAAQ,EAAE,QAAQ,KAAK,CAAC;IACxE,OAAO,QAAQ,EAAE;AACrB;AAEO,eAAe,cAAc,KAAa;IAC7C,MAAM,OAAO,MAAM,qBAAwC,CAAC,KAAK,EAAE,OAAO;IAC1E,OAAO,MAAM,YAAY;AAC7B;AAEO,eAAe;IAClB,MAAM,OAAO,MAAM,qBAA+B,CAAC,IAAI,EAAE,OAAO,QAAQ,CAAC;IACzE,OAAO,MAAM,OAAO,CAAC,QAAQ,OAAO,EAAE;AAC1C;AAEO,eAAe;IAClB,OAAO,MAAM,qBAA8B,CAAC,IAAI,EAAE,OAAO,OAAO,CAAC,KAAK,EAAE;AAC5E;AAEO,eAAe;IAClB,MAAM,WAAW,MAAM,qBAA0C;IACjE,OAAO,UAAU,UAAU,EAAE;AACjC;AAEO,eAAe,gBAAgB,OAAe;IACjD,MAAM,WAAW,MAAM,qBAAgD,CAAC,OAAO,EAAE,SAAS;IAC1F,OAAO,UAAU,UAAU;AAC/B;AAEO,eAAe,mBAAmB,OAAe,EAAE,MAAuC;IAC7F,MAAM,UAAU,OAAO,MAAM,CAAC,CAAC,KAAK;QAChC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,KAAK;QAC3B,OAAO;IACX,GAAG,CAAC;IAEJ,MAAM,WAAgB,MAAM,qBAAqB,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,gBAAgB;QACtF,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACzB;IAEA,IAAI,YAAY,SAAS,MAAM,EAAE;QAC5B,OAAO;YAAE,SAAS;QAAK;IAC5B;IAEA,OAAO;QAAE,SAAS;QAAO,SAAS;IAAoE;AAC1G;AAEO,eAAe;IAClB,MAAM,OAAO,MAAM,qBAAmC,CAAC,IAAI,EAAE,OAAO,aAAa,CAAC;IAClF,OAAO,MAAM,OAAO,CAAC,QAAQ,OAAO,EAAE;AAC1C;AAEO,eAAe;IAClB,MAAM,OAAO,MAAM,qBAAqC,CAAC,IAAI,EAAE,OAAO,gBAAgB,CAAC;IACtF,OAAO,QAAQ,EAAE;AACtB;;;IAlFsB;IAmBA;IAQA;IAKA;IAKA;IAKA;IAIA;IAKA;IAKA;IAkBA;IAKA;;AA/EA,+OAAA;AAmBA,+OAAA;AAQA,+OAAA;AAKA,+OAAA;AAKA,+OAAA;AAKA,+OAAA;AAIA,+OAAA;AAKA,+OAAA;AAKA,+OAAA;AAkBA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { Job } from '@/lib/truckershub-types';\nimport type { Application } from '@/lib/applications';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { unstable_cache as cache } from 'next/cache';\n\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\nconst VTC_ID = '1600';\n\n\nconst readJsonFile = cache(async <T>(filePath: string): Promise<T> => {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n           return { applications: [] } as any;\n        }\n        throw error;\n    }\n}, ['json-files-data'], { revalidate: 10 });\n\n\ntype ApiResponse<T> = {\n    status: boolean;\n    response: T;\n};\n\ntype UserApiResponse = {\n    status: boolean;\n    response: {\n        username: string;\n        steamID: string;\n        avatar: string;\n        country: string;\n        role: {\n            name: string;\n        };\n        truckersmp_id: number;\n        total_km: number;\n        total_jobs: number;\n        id: number;\n        registered: string;\n        statistics: {\n            distance: { total: number; };\n            jobs: number;\n            XP: { total: number; };\n            income: { total: number; };\n            weight: { total: number; };\n            fuelBurned: { total: number; };\n        };\n    };\n};\n\ntype JobsApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\ntype StatsApiResponse = {\n    status: boolean;\n    response: {\n        ets: { total_km: number; total_jobs: number; longest_job: number };\n        ats: { total_km: number; total_jobs: number; longest_job: number };\n    };\n};\n\nexport type UserProfile = Application & {\n    license_number: string;\n    division: string | null;\n    timezone: string;\n    jobs: Job[];\n    stats: StatsApiResponse['response'] | null;\n    avatar: string;\n    total_km: number;\n    total_jobs: number;\n    longest_job: number;\n    registered: string;\n    role: string;\n    monthly_xp: number;\n    monthly_income: number;\n    monthly_weight: number;\n    monthly_fuel: number;\n    truckersmpId: number | null;\n};\n\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<any | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`https://api.truckershub.in/v1/${endpoint}`);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        const res = await fetch(url.toString(), {\n             headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'User-Agent': 'TamilPasangaVTC/1.0',\n            },\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: any = await res.json();\n        \n        if (data) {\n             if (endpoint.startsWith('vtc/')) {\n                if (data.vtc) {\n                    if (endpoint.endsWith('/jobs')) return data.vtc.jobs;\n                    if (endpoint.endsWith('/drivers')) return data.vtc.drivers;\n                    if (endpoint.endsWith('/deliveries/live')) return data.vtc.deliveries;\n                    if (endpoint.endsWith('/drivers/live')) return data.vtc.drivers_live;\n                    return data.vtc;\n                }\n             }\n            if (data.response) return data.response;\n            if (data.jobs) return data.jobs;\n            if (Array.isArray(data.drivers)) return data.drivers;\n            if (data.skills) return { skills: data.skills };\n            if (data.routes) return data.routes;\n            if (Array.isArray(data)) return data;\n            if (data.status === false) {\n                 if (Object.keys(data).length > 2 || (endpoint !== 'live/delivery' && !endpoint.includes('vtc'))) { \n                    console.warn(`TruckersHub API returned status false for ${endpoint}:`, JSON.stringify(data));\n                 }\n                 return null;\n            }\n            return data;\n        }\n        \n        return null;\n\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nasync function getTMPVTCDetails(truckersmpId: number | null) {\n    if (!truckersmpId) return null;\n    try {\n        const res = await fetch(`${process.env.APP_URL}/api/truckersmp?endpoint=player/${truckersmpId}`);\n        if (!res.ok) return null;\n        const data = await res.json();\n        return data.response?.vtc;\n    } catch (error) {\n        console.error(\"Failed to fetch from TruckersMP:\", error);\n        return null;\n    }\n}\n\n\nexport async function getProfileData(email: string): Promise<UserProfile | null> {\n    const applicationsData = await readJsonFile<{ applications: Application[] }>(applicationsFilePath);\n    const userApplication = applicationsData.applications.find(app => app.email === email && app.status === 'Accepted');\n\n    if (userApplication) {\n        const [jobsData, statsData, driverData] = await Promise.all([\n            fetchFromTruckersHub<JobsApiResponse['response']>(`drivers/${userApplication.steamId}/jobs`),\n            fetchFromTruckersHub<StatsApiResponse['response']>(`stats/${userApplication.steamId}`),\n            fetchFromTruckersHub<UserApiResponse['response']>(`drivers/${userApplication.steamId}`),\n        ]);\n        \n        const driver = driverData;\n        const truckersmpId = driver?.truckersmp_id || null;\n\n        const [tmpVtcData] = await Promise.all([\n             getTMPVTCDetails(truckersmpId),\n        ]);\n\n\n        const jobs = (jobsData && Array.isArray(jobsData)) ? jobsData : [];\n        const stats = statsData || null;\n\n        const totalKm = driver?.statistics?.distance?.total ?? 0;\n        const totalJobs = driver?.statistics?.jobs ?? 0;\n\n        return {\n            ...userApplication,\n            license_number: `TP${userApplication.id.substring(4, 10)}`,\n            division: 'Alpha',\n            timezone: 'Asia/Kolkata', // Placeholder\n            jobs,\n            stats,\n            avatar: userApplication.avatar || driver?.avatar || \"https://static.truckersmp.com/avatars/5635477.1754020942.png\",\n            total_km: totalKm,\n            total_jobs: totalJobs,\n            longest_job: 0, // This data is not in the new structure\n            registered: driver?.registered || userApplication.submittedAt,\n            role: tmpVtcData?.role || driver?.role?.name || 'Driver',\n            monthly_xp: driver?.statistics?.XP?.total ?? 0,\n            monthly_income: driver?.statistics?.income?.total ?? 0,\n            monthly_weight: driver?.statistics?.weight?.total ?? 0,\n            monthly_fuel: driver?.statistics?.fuelBurned?.total ?? 0,\n            truckersmpId: truckersmpId,\n        };\n    } else {\n        console.error(`No accepted application found for email:`, email);\n        return null;\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/%28hub%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getRoutes as '002c5808c412466534bc0e01d021958a5c5f354e89'} from 'ACTIONS_MODULE0'\nexport {getAvailableSkills as '005a225106d9394ecdd57f27d99499dc0dcc9a0c6d'} from 'ACTIONS_MODULE0'\nexport {getLiveDrivers as '005c4aca74e95a78a5d7582311757fb35021d9dcc1'} from 'ACTIONS_MODULE0'\nexport {getLiveDeliveries as '0075f4d46f41b2ac7c97ae608d6fc48a4772b8902c'} from 'ACTIONS_MODULE0'\nexport {getDrivers as '00a4a859fdd768006c78bb100b3ae6061e172a81a6'} from 'ACTIONS_MODULE0'\nexport {getDashboardData as '00d082cd01067ea487fde784b0c7d7ec19a86753ab'} from 'ACTIONS_MODULE0'\nexport {getMyJobs as '40080ad4d3d7c09d052d456233d3bccbca0665fc6c'} from 'ACTIONS_MODULE0'\nexport {getDriverSkills as '408f381cca436ce9493bfd78483fa0da1304680001'} from 'ACTIONS_MODULE0'\nexport {getJobDetails as '40a9dadb6863e3a99a781d51e2f0b0ee9fa237462d'} from 'ACTIONS_MODULE0'\nexport {updateDriverSkills as '6006a75e5aa69475f95d8b93983d98d1aee82c9775'} from 'ACTIONS_MODULE0'\nexport {getAllVtcJobs as '60b8f3b6cbbb56fc3ea40a5181896a3b048007b926'} from 'ACTIONS_MODULE0'\nexport {getProfileData as '40fd4297d0ee03e0f048c25cec0c7fdd31c36392c2'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAWA","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/dashboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardClientPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardClientPage() from the server but DashboardClientPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/(hub)/dashboard-client.tsx <module evaluation>\",\n    \"DashboardClientPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+EACA","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/dashboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardClientPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardClientPage() from the server but DashboardClientPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/(hub)/dashboard-client.tsx\",\n    \"DashboardClientPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/date-utils.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Helper to parse the date/time string from events.json\nexport const parseEventDate = (dateTimeStr: string): Date | null => {\n    if (!dateTimeStr) return null;\n    \n    if (dateTimeStr.includes(' | ')) {\n        const parts = dateTimeStr.split(' | ');\n        const datePart = parts[0];\n        const timePart = parts[1];\n\n        const dateMatch = datePart.match(/(\\d{2})\\.(\\d{2})\\.(\\d{4})/);\n        if (!dateMatch) return null;\n        const [, day, month, year] = dateMatch.map(Number);\n\n        const timeMatch = timePart.match(/(\\d{2}):(\\d{2})/);\n        if (!timeMatch) return null;\n        const [hour, minute] = timeMatch.slice(1).map(Number);\n        \n        if (isNaN(day) || isNaN(month) || isNaN(year) || isNaN(hour) || isNaN(minute)) {\n        return null;\n        }\n        \n        return new Date(Date.UTC(year, month - 1, day, hour, minute));\n    }\n    \n    // Fallback for ISO string or other parsable formats\n    try {\n        const date = new Date(dateTimeStr);\n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n    } catch (e) {\n        return null;\n    }\n\n    return null;\n};\n\n\nconst timeSchema = z.object({\n  hour: z.string(),\n  minute: z.string(),\n  timezone: z.string(),\n});\n\nexport const parseDateTimeString = (dateTimeStr: string): { date: Date, time: z.infer<typeof timeSchema> } => {\n    const defaultTime = { hour: '13', minute: '00', timezone: 'UTC' };\n\n    if (!dateTimeStr) {\n        return { date: new Date(), time: defaultTime };\n    }\n\n    const date = parseEventDate(dateTimeStr);\n\n    if (date && !isNaN(date.getTime())) {\n         const hour = String(date.getUTCHours()).padStart(2, '0');\n         const minute = String(date.getUTCMinutes()).padStart(2, '0');\n         \n         const timePartMatch = dateTimeStr.match(/\\d{2}:\\d{2}\\s?(\\w+)?/);\n         const timezone = timePartMatch?.[1] || 'UTC';\n\n         return {\n             date: new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()),\n             time: { hour, minute, timezone }\n         };\n    }\n    \n    return {\n        date: new Date(),\n        time: defaultTime\n    };\n}\n\n\n// Helper to format date and time from an ISO string\nexport const formatDateTimeFromISO = (isoString: string): string => {\n    if (!isoString || isoString.includes('NaN')) {\n      return 'TBD';\n    }\n    try {\n        const date = new Date(isoString);\n        if (isNaN(date.getTime())) {\n            return 'TBD';\n        }\n        const day = String(date.getUTCDate()).padStart(2, '0');\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n        const year = date.getUTCFullYear();\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minute = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n    } catch (e) {\n        return 'TBD';\n    }\n};\n"],"names":[],"mappings":";;;;;AACA;;AAGO,MAAM,iBAAiB,CAAC;IAC3B,IAAI,CAAC,aAAa,OAAO;IAEzB,IAAI,YAAY,QAAQ,CAAC,QAAQ;QAC7B,MAAM,QAAQ,YAAY,KAAK,CAAC;QAChC,MAAM,WAAW,KAAK,CAAC,EAAE;QACzB,MAAM,WAAW,KAAK,CAAC,EAAE;QAEzB,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,GAAG,KAAK,OAAO,KAAK,GAAG,UAAU,GAAG,CAAC;QAE3C,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;QAE9C,IAAI,MAAM,QAAQ,MAAM,UAAU,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS;YAC/E,OAAO;QACP;QAEA,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,MAAM;IACzD;IAEA,oDAAoD;IACpD,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;YACxB,OAAO;QACX;IACJ,EAAE,OAAO,GAAG;QACR,OAAO;IACX;IAEA,OAAO;AACX;AAGA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEO,MAAM,sBAAsB,CAAC;IAChC,MAAM,cAAc;QAAE,MAAM;QAAM,QAAQ;QAAM,UAAU;IAAM;IAEhE,IAAI,CAAC,aAAa;QACd,OAAO;YAAE,MAAM,IAAI;YAAQ,MAAM;QAAY;IACjD;IAEA,MAAM,OAAO,eAAe;IAE5B,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,KAAK;QAC/B,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QAExD,MAAM,gBAAgB,YAAY,KAAK,CAAC;QACxC,MAAM,WAAW,eAAe,CAAC,EAAE,IAAI;QAEvC,OAAO;YACH,MAAM,IAAI,KAAK,KAAK,cAAc,IAAI,KAAK,WAAW,IAAI,KAAK,UAAU;YACzE,MAAM;gBAAE;gBAAM;gBAAQ;YAAS;QACnC;IACL;IAEA,OAAO;QACH,MAAM,IAAI;QACV,MAAM;IACV;AACJ;AAIO,MAAM,wBAAwB,CAAC;IAClC,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC,QAAQ;QAC3C,OAAO;IACT;IACA,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,MAAM,KAAK,OAAO,KAAK;YACvB,OAAO;QACX;QACA,MAAM,MAAM,OAAO,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG;QAClD,MAAM,QAAQ,OAAO,KAAK,WAAW,KAAK,GAAG,QAAQ,CAAC,GAAG;QACzD,MAAM,OAAO,KAAK,cAAc;QAChC,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QACxD,OAAO,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;IAC5D,EAAE,OAAO,GAAG;QACR,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/page.tsx"],"sourcesContent":["\nimport { getDashboardData } from '@/app/driver-hub/(hub)/actions';\nimport { PlaceHolderImages } from '@/lib/placeholder-images';\nimport type { Event } from '@/lib/events';\nimport eventsData from '@/lib/events.json';\nimport { DashboardClientPage } from '@/app/driver-hub/(hub)/dashboard-client';\nimport { parseEventDate } from '@/lib/date-utils';\nimport { getProfileData } from '../profile/actions';\nimport type { UserProfile } from '../profile/actions';\n\nconst getNearestPartnerEvent = (): (Event & { image: any }) | null => {\n    const now = new Date();\n    const partnerEvents = eventsData.events\n        .filter(e => e.type === 'partner')\n        .map(e => ({...e, parsedDate: parseEventDate(e.meetupTime || e.date)}))\n        .filter(e => e.parsedDate && e.parsedDate > now)\n        .sort((a, b) => a.parsedDate!.getTime() - b.parsedDate!.getTime());\n    \n    if (partnerEvents.length === 0) return null;\n\n    const nearestEvent = partnerEvents[0];\n    const image = PlaceHolderImages.find(p => p.id === nearestEvent.imageId);\n    \n    return { ...nearestEvent, image };\n};\n\n\nexport default async function DashboardPage() {\n    const dashboardData = await getDashboardData();\n    const nearestPartnerEvent = getNearestPartnerEvent();\n    const userProfile = await getProfileData(\"lsk27102@gmail.com\");\n\n    return (\n        <DashboardClientPage \n            initialDashboardData={dashboardData} \n            initialNearestPartnerEvent={nearestPartnerEvent}\n            initialUserProfile={userProfile}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAGA,MAAM,yBAAyB;IAC3B,MAAM,MAAM,IAAI;IAChB,MAAM,gBAAgB,4FAAA,CAAA,UAAU,CAAC,MAAM,CAClC,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WACvB,GAAG,CAAC,CAAA,IAAK,CAAC;YAAC,GAAG,CAAC;YAAE,YAAY,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,EAAE,UAAU,IAAI,EAAE,IAAI;QAAC,CAAC,GACpE,MAAM,CAAC,CAAA,IAAK,EAAE,UAAU,IAAI,EAAE,UAAU,GAAG,KAC3C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,UAAU,CAAE,OAAO,KAAK,EAAE,UAAU,CAAE,OAAO;IAEnE,IAAI,cAAc,MAAM,KAAK,GAAG,OAAO;IAEvC,MAAM,eAAe,aAAa,CAAC,EAAE;IACrC,MAAM,QAAQ,mIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa,OAAO;IAEvE,OAAO;QAAE,GAAG,YAAY;QAAE;IAAM;AACpC;AAGe,eAAe;IAC1B,MAAM,gBAAgB,MAAM,CAAA,GAAA,iJAAA,CAAA,mBAAgB,AAAD;IAC3C,MAAM,sBAAsB;IAC5B,MAAM,cAAc,MAAM,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD,EAAE;IAEzC,qBACI,8OAAC,8JAAA,CAAA,sBAAmB;QAChB,sBAAsB;QACtB,4BAA4B;QAC5B,oBAAoB;;;;;;AAGhC","debugId":null}}]
}