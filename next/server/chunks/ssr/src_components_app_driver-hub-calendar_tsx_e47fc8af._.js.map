{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app/driver-hub-calendar.tsx"],"sourcesContent":["\n'use client';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { Button } from '@/components/ui/button';\nimport { Event } from '@/lib/events';\nimport { useRef, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\n\ntype CalendarEvent = {\n  id: string;\n  title: string;\n  start: string;\n  url?: string;\n  backgroundColor: string;\n  borderColor: string;\n  extendedProps: {\n    isInternal: boolean;\n  }\n};\n\nconst parseDate = (dateStr: string): Date | null => {\n    // Format: \"DD.MM.YYYY | HH:mm ZZZ\"\n    const parts = dateStr.split(' | ');\n    if (parts.length < 2) return null;\n\n    const dateParts = parts[0].split('.');\n    if (dateParts.length < 3) return null;\n    \n    const [day, month, year] = dateParts;\n    const timePart = parts[1].split(' ')[0];\n    const [hour, minute] = timePart.split(':');\n\n    // Note: Month is 0-indexed in JS Date\n    const date = new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute)));\n    \n    return isNaN(date.getTime()) ? null : date;\n};\n\n\nexport function DriverHubCalendar({ events }: { events: Event[] }) {\n    const calendarRef = useRef<FullCalendar>(null);\n    const router = useRouter();\n\n    const calendarEvents: CalendarEvent[] = events.map(event => {\n        const startDate = parseDate(event.meetupTime);\n        return {\n            id: event.id,\n            title: event.title,\n            start: startDate ? startDate.toISOString() : new Date().toISOString(),\n            url: event.type === 'internal' ? `/driver-hub/events/${event.id}` : event.url,\n            backgroundColor: event.type === 'internal' ? 'hsl(var(--primary))' : 'hsl(var(--secondary))',\n            borderColor: event.type === 'internal' ? 'hsl(var(--accent))' : 'hsl(var(--border))',\n            extendedProps: {\n                isInternal: event.type === 'internal'\n            }\n        };\n    }).filter(e => e.start);\n\n    useEffect(() => {\n        const calendarApi = calendarRef.current?.getApi();\n        if (calendarApi) {\n            calendarApi.updateSize();\n        }\n    }, []);\n\n    const handleEventClick = (info: any) => {\n        info.jsEvent.preventDefault(); // Prevent the default link behavior\n        if (info.event.url) {\n            if(info.event.extendedProps.isInternal) {\n                router.push(info.event.url);\n            } else {\n                window.open(info.event.url, '_blank');\n            }\n        }\n    };\n\n\n  return (\n    <div className=\"p-4 rounded-lg text-sm\" id=\"calendar\">\n      <style>{`\n        #calendar .fc-toolbar-title { font-size: 1.5rem; }\n        #calendar .fc-button { background-color: hsl(var(--primary)); border-color: hsl(var(--primary)); color: hsl(var(--primary-foreground)); }\n        #calendar .fc-button:hover { background-color: hsl(var(--primary)) / 0.9; }\n        #calendar .fc-button-primary:not(:disabled).fc-button-active { background-color: hsl(var(--accent)); border-color: hsl(var(--accent)); }\n        #calendar .fc-daygrid-day.fc-day-today { background-color: hsl(var(--card)); }\n        #calendar .fc-daygrid-day-number { color: hsl(var(--foreground)); }\n        #calendar .fc-col-header-cell-cushion { color: hsl(var(--foreground)); }\n        #calendar .fc-event { padding: 4px; font-size: 0.8rem; cursor: pointer; }\n      `}</style>\n      <FullCalendar\n        ref={calendarRef}\n        plugins={[dayGridPlugin, timeGridPlugin]}\n        initialView=\"dayGridMonth\"\n        weekends={true}\n        events={calendarEvents}\n        eventClick={handleEventClick}\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        }}\n        height=\"auto\"\n      />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAGA;AACA;AARA;;;;;;;AAsBA,MAAM,YAAY,CAAC;IACf,mCAAmC;IACnC,MAAM,QAAQ,QAAQ,KAAK,CAAC;IAC5B,IAAI,MAAM,MAAM,GAAG,GAAG,OAAO;IAE7B,MAAM,YAAY,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;IACjC,IAAI,UAAU,MAAM,GAAG,GAAG,OAAO;IAEjC,MAAM,CAAC,KAAK,OAAO,KAAK,GAAG;IAC3B,MAAM,WAAW,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACvC,MAAM,CAAC,MAAM,OAAO,GAAG,SAAS,KAAK,CAAC;IAEtC,sCAAsC;IACtC,MAAM,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,OAAO,OAAO,OAAO,SAAS,GAAG,OAAO,MAAM,OAAO,OAAO,OAAO;IAElG,OAAO,MAAM,KAAK,OAAO,MAAM,OAAO;AAC1C;AAGO,SAAS,kBAAkB,EAAE,MAAM,EAAuB;IAC7D,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAgB;IACzC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,iBAAkC,OAAO,GAAG,CAAC,CAAA;QAC/C,MAAM,YAAY,UAAU,MAAM,UAAU;QAC5C,OAAO;YACH,IAAI,MAAM,EAAE;YACZ,OAAO,MAAM,KAAK;YAClB,OAAO,YAAY,UAAU,WAAW,KAAK,IAAI,OAAO,WAAW;YACnE,KAAK,MAAM,IAAI,KAAK,aAAa,CAAC,mBAAmB,EAAE,MAAM,EAAE,EAAE,GAAG,MAAM,GAAG;YAC7E,iBAAiB,MAAM,IAAI,KAAK,aAAa,wBAAwB;YACrE,aAAa,MAAM,IAAI,KAAK,aAAa,uBAAuB;YAChE,eAAe;gBACX,YAAY,MAAM,IAAI,KAAK;YAC/B;QACJ;IACJ,GAAG,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK;IAEtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc,YAAY,OAAO,EAAE;QACzC,IAAI,aAAa;YACb,YAAY,UAAU;QAC1B;IACJ,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACtB,KAAK,OAAO,CAAC,cAAc,IAAI,oCAAoC;QACnE,IAAI,KAAK,KAAK,CAAC,GAAG,EAAE;YAChB,IAAG,KAAK,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE;gBACpC,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG;YAC9B,OAAO;gBACH,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,EAAE;YAChC;QACJ;IACJ;IAGF,qBACE,8OAAC;QAAI,WAAU;QAAyB,IAAG;;0BACzC,8OAAC;0BAAO,CAAC;;;;;;;;;MAST,CAAC;;;;;;0BACD,8OAAC,wJAAA,CAAA,UAAY;gBACX,KAAK;gBACL,SAAS;oBAAC,kJAAA,CAAA,UAAa;oBAAE,mJAAA,CAAA,UAAc;iBAAC;gBACxC,aAAY;gBACZ,UAAU;gBACV,QAAQ;gBACR,YAAY;gBACZ,eAAe;oBACb,MAAM;oBACN,QAAQ;oBACR,OAAO;gBACT;gBACA,QAAO;;;;;;;;;;;;AAIf","debugId":null}}]
}