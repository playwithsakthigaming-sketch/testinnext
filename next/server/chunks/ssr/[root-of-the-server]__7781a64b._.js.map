{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver } from '@/lib/truckershub-types';\n\ntype TruckersHubResponse<T> = {\n    status: boolean;\n    response: T;\n};\n\n// This function should be executed on the server where process.env is available.\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<T | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`${process.env.APP_URL}/api/truckershub`);\n        url.searchParams.set('endpoint', endpoint);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        // Use a cache-sensitive fetch\n        const res = await fetch(url.toString(), {\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: TruckersHubResponse<T> = await res.json();\n        \n        if (data && data.status) {\n            if (Array.isArray(data.response) && data.response.length === 0) return [] as T;\n            if (typeof data.response === 'object' && data.response !== null && Object.keys(data.response).length === 0) return {} as T;\n            return data.response;\n        } else {\n            // Avoid logging errors for empty but valid responses\n            if (data.response && typeof data.response === 'object' && Object.keys(data.response).length > 0) {\n                 console.error(`Invalid API response structure from TruckersHub (${endpoint}):`, data);\n            }\n            return null;\n        }\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nexport async function getDashboardData() {\n    try {\n        const [statsData, allTime, monthly, jobs, user, liveDrivers] = await Promise.all([\n            fetchFromTruckersHub<{ vtc: VtcStats }>('vtc'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/alltime'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/monthly'),\n            fetchFromTruckersHub<Job[]>('jobs/all'),\n            fetchFromTruckersHub<{ username: string }>('user'),\n            fetchFromTruckersHub<LiveDriver[]>('live/drivers'),\n        ]);\n\n        const stats = statsData ? statsData.vtc : null;\n        \n        return { stats, allTime, monthly, jobs, user, liveDrivers };\n    } catch (error) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        return { stats: null, allTime: null, monthly: null, jobs: null, user: null, liveDrivers: null };\n    }\n}\n\nexport async function getAllVtcJobs(month?: string, year?: string): Promise<Job[]> {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    return await fetchFromTruckersHub<Job[]>('jobs/all', params) || [];\n}\n\nexport async function getMyJobs(): Promise<Job[]> {\n    return await fetchFromTruckersHub<Job[]>('jobs') || [];\n}\n"],"names":[],"mappings":";;;;;;;;;;AAUA,iFAAiF;AACjF,eAAe,qBAAwB,QAAgB,EAAE,MAAwB;IAC7E,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC9C,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IAEA,IAAI;QACA,MAAM,MAAM,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC;QAC5D,IAAI,YAAY,CAAC,GAAG,CAAC,YAAY;QACjC,IAAI,QAAQ;YACR,OAAO,OAAO,CAAC,CAAC,OAAO;gBACnB,IAAI,YAAY,CAAC,MAAM,CAAC,KAAK;YACjC;QACJ;QAEA,8BAA8B;QAC9B,MAAM,MAAM,MAAM,MAAM,IAAI,QAAQ,IAAI;YACpC,MAAM;gBAAE,YAAY;YAAI,EAAE,6BAA6B;QAC3D;QAGA,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;YAC3F,OAAO;QACX;QAEA,MAAM,OAA+B,MAAM,IAAI,IAAI;QAEnD,IAAI,QAAQ,KAAK,MAAM,EAAE;YACrB,IAAI,MAAM,OAAO,CAAC,KAAK,QAAQ,KAAK,KAAK,QAAQ,CAAC,MAAM,KAAK,GAAG,OAAO,EAAE;YACzE,IAAI,OAAO,KAAK,QAAQ,KAAK,YAAY,KAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI,CAAC,KAAK,QAAQ,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC;YACpH,OAAO,KAAK,QAAQ;QACxB,OAAO;YACH,qDAAqD;YACrD,IAAI,KAAK,QAAQ,IAAI,OAAO,KAAK,QAAQ,KAAK,YAAY,OAAO,IAAI,CAAC,KAAK,QAAQ,EAAE,MAAM,GAAG,GAAG;gBAC5F,QAAQ,KAAK,CAAC,CAAC,iDAAiD,EAAE,SAAS,EAAE,CAAC,EAAE;YACrF;YACA,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,SAAS,EAAE,CAAC,EAAE;QAChE,OAAO;IACX;AACJ;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,CAAC,WAAW,SAAS,SAAS,MAAM,MAAM,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC7E,qBAAwC;YACxC,qBAAwC;YACxC,qBAAwC;YACxC,qBAA4B;YAC5B,qBAA2C;YAC3C,qBAAmC;SACtC;QAED,MAAM,QAAQ,YAAY,UAAU,GAAG,GAAG;QAE1C,OAAO;YAAE;YAAO;YAAS;YAAS;YAAM;YAAM;QAAY;IAC9D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO;YAAE,OAAO;YAAM,SAAS;YAAM,SAAS;YAAM,MAAM;YAAM,MAAM;YAAM,aAAa;QAAK;IAClG;AACJ;AAEO,eAAe,cAAc,KAAc,EAAE,IAAa;IAC7D,MAAM,SAAS,IAAI;IACnB,IAAI,OAAO,OAAO,MAAM,CAAC,SAAS;IAClC,IAAI,MAAM,OAAO,MAAM,CAAC,QAAQ;IAChC,OAAO,MAAM,qBAA4B,YAAY,WAAW,EAAE;AACtE;AAEO,eAAe;IAClB,OAAO,MAAM,qBAA4B,WAAW,EAAE;AAC1D;;;IA7BsB;IAoBA;IAOA;;AA3BA,+OAAA;AAoBA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { Job } from '@/lib/truckershub-types';\nimport type { Application } from '@/lib/applications';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { unstable_cache as cache } from 'next/cache';\n\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\n\n\nconst readJsonFile = cache(async <T>(filePath: string): Promise<T> => {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n           return { applications: [] } as any;\n        }\n        throw error;\n    }\n}, ['json-files-data'], { revalidate: 10 });\n\n\ntype UserApiResponse = {\n    status: boolean;\n    response: {\n        username: string;\n        email: string;\n        avatar: string;\n        country: string;\n        role: {\n            name: string;\n        };\n        truckersmp_id: number;\n        steam_id: string;\n        total_km: number;\n        total_jobs: number;\n        longest_job: number;\n        id: number;\n        registered: string;\n        xp: number;\n        money: number;\n        weight: number;\n        fuel: number;\n    };\n};\n\ntype JobsApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\ntype StatsApiResponse = {\n    status: boolean;\n    response: {\n        ets: { total_km: number; total_jobs: number; longest_job: number };\n        ats: { total_km: number; total_jobs: number; longest_job: number };\n    };\n};\n\nexport type UserProfile = Application & {\n    license_number: string;\n    division: string | null;\n    timezone: string;\n    jobs: Job[];\n    stats: StatsApiResponse['response'] | null;\n    avatar: string;\n    total_km: number;\n    total_jobs: number;\n    longest_job: number;\n    registered: string;\n    role: string;\n    monthly_xp: number;\n    monthly_income: number;\n    monthly_weight: number;\n    monthly_fuel: number;\n    truckersmpId: number | null;\n};\n\nasync function fetchFromTruckersHub(endpoint: string) {\n     const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n    const url = `${process.env.APP_URL}/api/truckershub?endpoint=${endpoint}`;\n    const res = await fetch(url, {\n        next: { revalidate: 300 } // Revalidate every 5 minutes\n    });\n\n    if (!res.ok) {\n        console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n        return null;\n    }\n\n    return res.json();\n}\n\nasync function getTMPVTCDetails(truckersmpId: number | null) {\n    if (!truckersmpId) return null;\n    try {\n        const res = await fetch(`${process.env.APP_URL}/api/truckersmp?endpoint=player/${truckersmpId}`);\n        if (!res.ok) return null;\n        const data = await res.json();\n        return data.response?.vtc;\n    } catch (error) {\n        console.error(\"Failed to fetch from TruckersMP:\", error);\n        return null;\n    }\n}\n\n\nexport async function getProfileData(email: string): Promise<UserProfile | null> {\n    const applicationsData = await readJsonFile<{ applications: Application[] }>(applicationsFilePath);\n    const userApplication = applicationsData.applications.find(app => app.email === email && app.status === 'Accepted');\n\n    if (userApplication) {\n        const [jobsData, statsData, driverData] = await Promise.all([\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}/jobs`) as Promise<JobsApiResponse | null>,\n            fetchFromTruckersHub(`stats/${userApplication.steamId}`) as Promise<StatsApiResponse | null>,\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}`) as Promise<UserApiResponse | null>,\n        ]);\n        \n        const driver = (driverData && driverData.status) ? driverData.response : null;\n        const truckersmpId = driver?.truckersmp_id || null;\n\n        const [tmpVtcData] = await Promise.all([\n             getTMPVTCDetails(truckersmpId),\n        ]);\n\n\n        const jobs = (jobsData && jobsData.status && Array.isArray(jobsData.response)) ? jobsData.response : [];\n        const stats = (statsData && statsData.status) ? statsData.response : null;\n\n        const totalKm = stats?.ets.total_km || 0 + stats?.ats.total_km || 0;\n        const totalJobs = stats?.ets.total_jobs || 0 + stats?.ats.total_jobs || 0;\n        const longestJob = Math.max(stats?.ets.longest_job || 0, stats?.ats.longest_job || 0);\n\n        return {\n            ...userApplication,\n            license_number: `TP${userApplication.id.substring(4, 10)}`,\n            division: 'Alpha',\n            timezone: 'Asia/Kolkata', // Placeholder\n            jobs,\n            stats,\n            avatar: userApplication.avatar || driver?.avatar || \"https://static.truckersmp.com/avatars/5635477.1754020942.png\",\n            total_km: totalKm,\n            total_jobs: totalJobs,\n            longest_job: longestJob,\n            registered: driver?.registered || userApplication.submittedAt,\n            role: tmpVtcData?.role || driver?.role.name || 'Driver',\n            monthly_xp: driver?.xp || 0,\n            monthly_income: driver?.money || 0,\n            monthly_weight: driver?.weight || 0,\n            monthly_fuel: driver?.fuel || 0,\n            truckersmpId: truckersmpId,\n        };\n    } else {\n        console.error(`No accepted application found for email:`, email);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;;;;;;AAGA,MAAM,uBAAuB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO;AAGpE,MAAM,eAAe,CAAA,GAAA,6HAAA,CAAA,iBAAK,AAAD,EAAE,OAAU;IACjC,IAAI;QACA,MAAM,cAAc,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,UAAU;QAChD,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACrD,OAAO;gBAAE,cAAc,EAAE;YAAC;QAC7B;QACA,MAAM;IACV;AACJ,GAAG;IAAC;CAAkB,EAAE;IAAE,YAAY;AAAG;AA2DzC,eAAe,qBAAqB,QAAgB;IAC/C,MAAM,SAAS,QAAQ,GAAG,CAAC,mBAAmB;IAC/C,IAAI,CAAC,QAAQ;QACT,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IACA,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU;IACzE,MAAM,MAAM,MAAM,MAAM,KAAK;QACzB,MAAM;YAAE,YAAY;QAAI,EAAE,6BAA6B;IAC3D;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACT,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;QAC3F,OAAO;IACX;IAEA,OAAO,IAAI,IAAI;AACnB;AAEA,eAAe,iBAAiB,YAA2B;IACvD,IAAI,CAAC,cAAc,OAAO;IAC1B,IAAI;QACA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,gCAAgC,EAAE,cAAc;QAC/F,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;QACpB,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO,KAAK,QAAQ,EAAE;IAC1B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;IACX;AACJ;AAGO,eAAe,eAAe,KAAa;IAC9C,MAAM,mBAAmB,MAAM,aAA8C;IAC7E,MAAM,kBAAkB,iBAAiB,YAAY,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,KAAK;IAExG,IAAI,iBAAiB;QACjB,MAAM,CAAC,UAAU,WAAW,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;YACxD,qBAAqB,CAAC,QAAQ,EAAE,gBAAgB,OAAO,CAAC,KAAK,CAAC;YAC9D,qBAAqB,CAAC,MAAM,EAAE,gBAAgB,OAAO,EAAE;YACvD,qBAAqB,CAAC,QAAQ,EAAE,gBAAgB,OAAO,EAAE;SAC5D;QAED,MAAM,SAAS,AAAC,cAAc,WAAW,MAAM,GAAI,WAAW,QAAQ,GAAG;QACzE,MAAM,eAAe,QAAQ,iBAAiB;QAE9C,MAAM,CAAC,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;YAClC,iBAAiB;SACrB;QAGD,MAAM,OAAO,AAAC,YAAY,SAAS,MAAM,IAAI,MAAM,OAAO,CAAC,SAAS,QAAQ,IAAK,SAAS,QAAQ,GAAG,EAAE;QACvG,MAAM,QAAQ,AAAC,aAAa,UAAU,MAAM,GAAI,UAAU,QAAQ,GAAG;QAErE,MAAM,UAAU,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,YAAY;QAClE,MAAM,YAAY,OAAO,IAAI,cAAc,IAAI,OAAO,IAAI,cAAc;QACxE,MAAM,aAAa,KAAK,GAAG,CAAC,OAAO,IAAI,eAAe,GAAG,OAAO,IAAI,eAAe;QAEnF,OAAO;YACH,GAAG,eAAe;YAClB,gBAAgB,CAAC,EAAE,EAAE,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,KAAK;YAC1D,UAAU;YACV,UAAU;YACV;YACA;YACA,QAAQ,gBAAgB,MAAM,IAAI,QAAQ,UAAU;YACpD,UAAU;YACV,YAAY;YACZ,aAAa;YACb,YAAY,QAAQ,cAAc,gBAAgB,WAAW;YAC7D,MAAM,YAAY,QAAQ,QAAQ,KAAK,QAAQ;YAC/C,YAAY,QAAQ,MAAM;YAC1B,gBAAgB,QAAQ,SAAS;YACjC,gBAAgB,QAAQ,UAAU;YAClC,cAAc,QAAQ,QAAQ;YAC9B,cAAc;QAClB;IACJ,OAAO;QACH,QAAQ,KAAK,CAAC,CAAC,wCAAwC,CAAC,EAAE;QAC1D,OAAO;IACX;AACJ;;;IAjDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/date-utils.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Helper to parse the date/time string from events.json\nexport const parseEventDate = (dateTimeStr: string): Date | null => {\n    if (!dateTimeStr) return null;\n    \n    if (dateTimeStr.includes(' | ')) {\n        const parts = dateTimeStr.split(' | ');\n        const datePart = parts[0];\n        const timePart = parts[1];\n\n        const dateMatch = datePart.match(/(\\d{2})\\.(\\d{2})\\.(\\d{4})/);\n        if (!dateMatch) return null;\n        const [, day, month, year] = dateMatch.map(Number);\n\n        const timeMatch = timePart.match(/(\\d{2}):(\\d{2})/);\n        if (!timeMatch) return null;\n        const [hour, minute] = timeMatch.slice(1).map(Number);\n        \n        if (isNaN(day) || isNaN(month) || isNaN(year) || isNaN(hour) || isNaN(minute)) {\n        return null;\n        }\n        \n        return new Date(Date.UTC(year, month - 1, day, hour, minute));\n    }\n    \n    // Fallback for ISO string or other parsable formats\n    try {\n        const date = new Date(dateTimeStr);\n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n    } catch (e) {\n        return null;\n    }\n\n    return null;\n};\n\n\nconst timeSchema = z.object({\n  hour: z.string(),\n  minute: z.string(),\n  timezone: z.string(),\n});\n\nexport const parseDateTimeString = (dateTimeStr: string): { date: Date, time: z.infer<typeof timeSchema> } => {\n    const defaultTime = { hour: '13', minute: '00', timezone: 'UTC' };\n\n    if (!dateTimeStr) {\n        return { date: new Date(), time: defaultTime };\n    }\n\n    const date = parseEventDate(dateTimeStr);\n\n    if (date && !isNaN(date.getTime())) {\n         const hour = String(date.getUTCHours()).padStart(2, '0');\n         const minute = String(date.getUTCMinutes()).padStart(2, '0');\n         \n         const timePartMatch = dateTimeStr.match(/\\d{2}:\\d{2}\\s?(\\w+)?/);\n         const timezone = timePartMatch?.[1] || 'UTC';\n\n         return {\n             date: new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()),\n             time: { hour, minute, timezone }\n         };\n    }\n    \n    return {\n        date: new Date(),\n        time: defaultTime\n    };\n}\n\n\n// Helper to format date and time from an ISO string\nexport const formatDateTimeFromISO = (isoString: string): string => {\n    if (!isoString || isoString.includes('NaN')) {\n      return 'TBD';\n    }\n    try {\n        const date = new Date(isoString);\n        if (isNaN(date.getTime())) {\n            return 'TBD';\n        }\n        const day = String(date.getUTCDate()).padStart(2, '0');\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n        const year = date.getUTCFullYear();\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minute = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n    } catch (e) {\n        return 'TBD';\n    }\n};\n"],"names":[],"mappings":";;;;;AACA;;AAGO,MAAM,iBAAiB,CAAC;IAC3B,IAAI,CAAC,aAAa,OAAO;IAEzB,IAAI,YAAY,QAAQ,CAAC,QAAQ;QAC7B,MAAM,QAAQ,YAAY,KAAK,CAAC;QAChC,MAAM,WAAW,KAAK,CAAC,EAAE;QACzB,MAAM,WAAW,KAAK,CAAC,EAAE;QAEzB,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,GAAG,KAAK,OAAO,KAAK,GAAG,UAAU,GAAG,CAAC;QAE3C,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;QAE9C,IAAI,MAAM,QAAQ,MAAM,UAAU,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS;YAC/E,OAAO;QACP;QAEA,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,MAAM;IACzD;IAEA,oDAAoD;IACpD,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;YACxB,OAAO;QACX;IACJ,EAAE,OAAO,GAAG;QACR,OAAO;IACX;IAEA,OAAO;AACX;AAGA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEO,MAAM,sBAAsB,CAAC;IAChC,MAAM,cAAc;QAAE,MAAM;QAAM,QAAQ;QAAM,UAAU;IAAM;IAEhE,IAAI,CAAC,aAAa;QACd,OAAO;YAAE,MAAM,IAAI;YAAQ,MAAM;QAAY;IACjD;IAEA,MAAM,OAAO,eAAe;IAE5B,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,KAAK;QAC/B,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QAExD,MAAM,gBAAgB,YAAY,KAAK,CAAC;QACxC,MAAM,WAAW,eAAe,CAAC,EAAE,IAAI;QAEvC,OAAO;YACH,MAAM,IAAI,KAAK,KAAK,cAAc,IAAI,KAAK,WAAW,IAAI,KAAK,UAAU;YACzE,MAAM;gBAAE;gBAAM;gBAAQ;YAAS;QACnC;IACL;IAEA,OAAO;QACH,MAAM,IAAI;QACV,MAAM;IACV;AACJ;AAIO,MAAM,wBAAwB,CAAC;IAClC,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC,QAAQ;QAC3C,OAAO;IACT;IACA,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,MAAM,KAAK,OAAO,KAAK;YACvB,OAAO;QACX;QACA,MAAM,MAAM,OAAO,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG;QAClD,MAAM,QAAQ,OAAO,KAAK,WAAW,KAAK,GAAG,QAAQ,CAAC,GAAG;QACzD,MAAM,OAAO,KAAK,cAAc;QAChC,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QACxD,OAAO,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;IAC5D,EAAE,OAAO,GAAG;QACR,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/about/actions.ts"],"sourcesContent":["\n'use server';\n\nimport eventsData from '@/lib/events.json';\nimport { parseEventDate } from '@/lib/date-utils';\n\nconst VTC_ID = '73933';\n\ntype TruckersMPVtcResponse = {\n    error: boolean;\n    response?: {\n        members_count: number;\n    }\n}\n\nasync function fetchTruckersMPVtcData(): Promise<number> {\n    try {\n        const url = `https://api.truckersmp.com/v2/vtc/${VTC_ID}`;\n        const res = await fetch(url, {\n            next: { revalidate: 3600 } // Revalidate every hour\n        });\n        \n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersMP VTC endpoint:`, res.status, await res.text());\n            return 0;\n        }\n\n        const data: TruckersMPVtcResponse = await res.json();\n        \n        if (data && !data.error && data.response) {\n            return data.response.members_count;\n        } else {\n            console.error(`Invalid API response structure from TruckersMP:`, data);\n            return 0;\n        }\n    } catch (error) {\n        console.error(`Error fetching from TruckersMP:`, error);\n        return 0;\n    }\n}\n\nfunction getCompletedEventsCount(): number {\n    const now = new Date();\n    // We only count internal events as \"completed\" by the VTC\n    return eventsData.events.filter(event => {\n        if (event.type !== 'internal') return false;\n        const eventDate = parseEventDate(event.meetupTime || event.date);\n        return eventDate ? eventDate < now : false;\n    }).length;\n}\n\nexport async function getAchievementsData() {\n    const totalDrivers = await fetchTruckersMPVtcData();\n    const completedEvents = getCompletedEventsCount();\n    return { totalDrivers, completedEvents };\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;;;;;;AAEA,MAAM,SAAS;AASf,eAAe;IACX,IAAI;QACA,MAAM,MAAM,CAAC,kCAAkC,EAAE,QAAQ;QACzD,MAAM,MAAM,MAAM,MAAM,KAAK;YACzB,MAAM;gBAAE,YAAY;YAAK,EAAE,wBAAwB;QACvD;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,QAAQ,KAAK,CAAC,CAAC,6CAA6C,CAAC,EAAE,IAAI,MAAM,EAAE,MAAM,IAAI,IAAI;YACzF,OAAO;QACX;QAEA,MAAM,OAA8B,MAAM,IAAI,IAAI;QAElD,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,KAAK,QAAQ,EAAE;YACtC,OAAO,KAAK,QAAQ,CAAC,aAAa;QACtC,OAAO;YACH,QAAQ,KAAK,CAAC,CAAC,+CAA+C,CAAC,EAAE;YACjE,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,+BAA+B,CAAC,EAAE;QACjD,OAAO;IACX;AACJ;AAEA,SAAS;IACL,MAAM,MAAM,IAAI;IAChB,0DAA0D;IAC1D,OAAO,4FAAA,CAAA,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QAC5B,IAAI,MAAM,IAAI,KAAK,YAAY,OAAO;QACtC,MAAM,YAAY,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,UAAU,IAAI,MAAM,IAAI;QAC/D,OAAO,YAAY,YAAY,MAAM;IACzC,GAAG,MAAM;AACb;AAEO,eAAe;IAClB,MAAM,eAAe,MAAM;IAC3B,MAAM,kBAAkB;IACxB,OAAO;QAAE;QAAc;IAAgB;AAC3C;;;IAJsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/%28hub%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMyJobs as '00080ad4d3d7c09d052d456233d3bccbca0665fc6c'} from 'ACTIONS_MODULE0'\nexport {getDashboardData as '00d082cd01067ea487fde784b0c7d7ec19a86753ab'} from 'ACTIONS_MODULE0'\nexport {getAllVtcJobs as '60b8f3b6cbbb56fc3ea40a5181896a3b048007b926'} from 'ACTIONS_MODULE0'\nexport {getProfileData as '40fd4297d0ee03e0f048c25cec0c7fdd31c36392c2'} from 'ACTIONS_MODULE1'\nexport {getAchievementsData as '0069bc5ada5c1b6e98a3502aceb678b455d3280c12'} from 'ACTIONS_MODULE2'\n"],"names":[],"mappings":";AAAA;AAGA;AACA","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/dashboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardClientPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardClientPage() from the server but DashboardClientPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/(hub)/dashboard-client.tsx <module evaluation>\",\n    \"DashboardClientPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+EACA","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/dashboard-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardClientPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardClientPage() from the server but DashboardClientPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/(hub)/dashboard-client.tsx\",\n    \"DashboardClientPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/page.tsx"],"sourcesContent":["\nimport { getDashboardData } from '@/app/driver-hub/(hub)/actions';\nimport { PlaceHolderImages } from '@/lib/placeholder-images';\nimport type { Event } from '@/lib/events';\nimport eventsData from '@/lib/events.json';\nimport { DashboardClientPage } from '@/app/driver-hub/(hub)/dashboard-client';\nimport { parseEventDate } from '@/lib/date-utils';\nimport { getProfileData } from '../profile/actions';\nimport type { UserProfile } from '../profile/actions';\nimport { getAchievementsData } from '@/app/about/actions';\n\nconst getNearestPartnerEvent = (): (Event & { image: any }) | null => {\n    const now = new Date();\n    const partnerEvents = eventsData.events\n        .filter(e => e.type === 'partner')\n        .map(e => ({...e, parsedDate: parseEventDate(e.meetupTime || e.date)}))\n        .filter(e => e.parsedDate && e.parsedDate > now)\n        .sort((a, b) => a.parsedDate!.getTime() - b.parsedDate!.getTime());\n    \n    if (partnerEvents.length === 0) return null;\n\n    const nearestEvent = partnerEvents[0];\n    const image = PlaceHolderImages.find(p => p.id === nearestEvent.imageId);\n    \n    return { ...nearestEvent, image };\n};\n\n\nexport default async function DashboardPage() {\n    const dashboardData = await getDashboardData();\n    const nearestPartnerEvent = getNearestPartnerEvent();\n    const userProfile = await getProfileData(\"lsk27102@gmail.com\");\n    const achievementsData = await getAchievementsData();\n\n    return (\n        <DashboardClientPage \n            initialDashboardData={dashboardData} \n            initialNearestPartnerEvent={nearestPartnerEvent}\n            initialUserProfile={userProfile}\n            initialTotalDrivers={achievementsData.totalDrivers}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;AAEA,MAAM,yBAAyB;IAC3B,MAAM,MAAM,IAAI;IAChB,MAAM,gBAAgB,4FAAA,CAAA,UAAU,CAAC,MAAM,CAClC,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WACvB,GAAG,CAAC,CAAA,IAAK,CAAC;YAAC,GAAG,CAAC;YAAE,YAAY,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,EAAE,UAAU,IAAI,EAAE,IAAI;QAAC,CAAC,GACpE,MAAM,CAAC,CAAA,IAAK,EAAE,UAAU,IAAI,EAAE,UAAU,GAAG,KAC3C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,UAAU,CAAE,OAAO,KAAK,EAAE,UAAU,CAAE,OAAO;IAEnE,IAAI,cAAc,MAAM,KAAK,GAAG,OAAO;IAEvC,MAAM,eAAe,aAAa,CAAC,EAAE;IACrC,MAAM,QAAQ,mIAAA,CAAA,oBAAiB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa,OAAO;IAEvE,OAAO;QAAE,GAAG,YAAY;QAAE;IAAM;AACpC;AAGe,eAAe;IAC1B,MAAM,gBAAgB,MAAM,CAAA,GAAA,iJAAA,CAAA,mBAAgB,AAAD;IAC3C,MAAM,sBAAsB;IAC5B,MAAM,cAAc,MAAM,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD,EAAE;IACzC,MAAM,mBAAmB,MAAM,CAAA,GAAA,8HAAA,CAAA,sBAAmB,AAAD;IAEjD,qBACI,8OAAC,8JAAA,CAAA,sBAAmB;QAChB,sBAAsB;QACtB,4BAA4B;QAC5B,oBAAoB;QACpB,qBAAqB,iBAAiB,YAAY;;;;;;AAG9D","debugId":null}}]
}