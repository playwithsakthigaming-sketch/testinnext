{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-images.ts"],"sourcesContent":["import data from './placeholder-images.json';\n\nexport type ImagePlaceholder = {\n  id: string;\n  description: string;\n  imageUrl: string;\n  imageHint: string;\n};\n\nexport const PlaceHolderImages: ImagePlaceholder[] = data.placeholderImages;\n"],"names":[],"mappings":";;;AAAA;;AASO,MAAM,oBAAwC,2GAAA,CAAA,UAAI,CAAC,iBAAiB","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver } from '@/lib/truckershub-types';\n\ntype TruckersHubResponse<T> = {\n    status: boolean;\n    response: T;\n};\n\n// This function should be executed on the server where process.env is available.\nasync function fetchFromTruckersHub<T>(endpoint: string, params?: URLSearchParams): Promise<T | null> {\n    const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n\n    try {\n        const url = new URL(`${process.env.APP_URL}/api/truckershub`);\n        url.searchParams.set('endpoint', endpoint);\n        if (params) {\n            params.forEach((value, key) => {\n                url.searchParams.append(key, value);\n            });\n        }\n        \n        // Use a cache-sensitive fetch\n        const res = await fetch(url.toString(), {\n            next: { revalidate: 300 } // Revalidate every 5 minutes\n        });\n\n\n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n            return null;\n        }\n\n        const data: TruckersHubResponse<T> = await res.json();\n        \n        if (data && data.status) {\n            if (Array.isArray(data.response) && data.response.length === 0) return [] as T;\n            if (typeof data.response === 'object' && data.response !== null && Object.keys(data.response).length === 0) return {} as T;\n            return data.response;\n        } else {\n            // Avoid logging errors for empty but valid responses\n            if (data.response && typeof data.response === 'object' && Object.keys(data.response).length > 0) {\n                 console.error(`Invalid API response structure from TruckersHub (${endpoint}):`, data);\n            }\n            return null;\n        }\n    } catch (error) {\n        console.error(`Error fetching from TruckersHub (${endpoint}):`, error);\n        return null;\n    }\n}\n\n\nexport async function getDashboardData() {\n    try {\n        const [statsData, allTime, monthly, jobs, user, liveDrivers] = await Promise.all([\n            fetchFromTruckersHub<{ vtc: VtcStats }>('vtc'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/alltime'),\n            fetchFromTruckersHub<LeaderboardUser[]>('leaderboard/monthly'),\n            fetchFromTruckersHub<Job[]>('jobs/all'),\n            fetchFromTruckersHub<{ username: string }>('user'),\n            fetchFromTruckersHub<LiveDriver[]>('live/drivers'),\n        ]);\n\n        const stats = statsData ? statsData.vtc : null;\n        \n        return { stats, allTime, monthly, jobs, user, liveDrivers };\n    } catch (error) {\n        console.error(\"Failed to fetch dashboard data:\", error);\n        return { stats: null, allTime: null, monthly: null, jobs: null, user: null, liveDrivers: null };\n    }\n}\n\nexport async function getAllVtcJobs(month?: string, year?: string): Promise<Job[]> {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n    return await fetchFromTruckersHub<Job[]>('jobs/all', params) || [];\n}\n\nexport async function getMyJobs(): Promise<Job[]> {\n    return await fetchFromTruckersHub<Job[]>('jobs') || [];\n}\n"],"names":[],"mappings":";;;;;;IA0DsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/date-utils.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Helper to parse the date/time string from events.json\nexport const parseEventDate = (dateTimeStr: string): Date | null => {\n    if (!dateTimeStr) return null;\n    \n    if (dateTimeStr.includes(' | ')) {\n        const parts = dateTimeStr.split(' | ');\n        const datePart = parts[0];\n        const timePart = parts[1];\n\n        const dateMatch = datePart.match(/(\\d{2})\\.(\\d{2})\\.(\\d{4})/);\n        if (!dateMatch) return null;\n        const [, day, month, year] = dateMatch.map(Number);\n\n        const timeMatch = timePart.match(/(\\d{2}):(\\d{2})/);\n        if (!timeMatch) return null;\n        const [hour, minute] = timeMatch.slice(1).map(Number);\n        \n        if (isNaN(day) || isNaN(month) || isNaN(year) || isNaN(hour) || isNaN(minute)) {\n        return null;\n        }\n        \n        return new Date(Date.UTC(year, month - 1, day, hour, minute));\n    }\n    \n    // Fallback for ISO string or other parsable formats\n    try {\n        const date = new Date(dateTimeStr);\n        if (!isNaN(date.getTime())) {\n            return date;\n        }\n    } catch (e) {\n        return null;\n    }\n\n    return null;\n};\n\n\nconst timeSchema = z.object({\n  hour: z.string(),\n  minute: z.string(),\n  timezone: z.string(),\n});\n\nexport const parseDateTimeString = (dateTimeStr: string): { date: Date, time: z.infer<typeof timeSchema> } => {\n    const defaultTime = { hour: '13', minute: '00', timezone: 'UTC' };\n\n    if (!dateTimeStr) {\n        return { date: new Date(), time: defaultTime };\n    }\n\n    const date = parseEventDate(dateTimeStr);\n\n    if (date && !isNaN(date.getTime())) {\n         const hour = String(date.getUTCHours()).padStart(2, '0');\n         const minute = String(date.getUTCMinutes()).padStart(2, '0');\n         \n         const timePartMatch = dateTimeStr.match(/\\d{2}:\\d{2}\\s?(\\w+)?/);\n         const timezone = timePartMatch?.[1] || 'UTC';\n\n         return {\n             date: new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()),\n             time: { hour, minute, timezone }\n         };\n    }\n    \n    return {\n        date: new Date(),\n        time: defaultTime\n    };\n}\n\n\n// Helper to format date and time from an ISO string\nexport const formatDateTimeFromISO = (isoString: string): string => {\n    if (!isoString || isoString.includes('NaN')) {\n      return 'TBD';\n    }\n    try {\n        const date = new Date(isoString);\n        if (isNaN(date.getTime())) {\n            return 'TBD';\n        }\n        const day = String(date.getUTCDate()).padStart(2, '0');\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n        const year = date.getUTCFullYear();\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minute = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${day}.${month}.${year} | ${hour}:${minute} UTC`;\n    } catch (e) {\n        return 'TBD';\n    }\n};\n"],"names":[],"mappings":";;;;;AACA;;AAGO,MAAM,iBAAiB,CAAC;IAC3B,IAAI,CAAC,aAAa,OAAO;IAEzB,IAAI,YAAY,QAAQ,CAAC,QAAQ;QAC7B,MAAM,QAAQ,YAAY,KAAK,CAAC;QAChC,MAAM,WAAW,KAAK,CAAC,EAAE;QACzB,MAAM,WAAW,KAAK,CAAC,EAAE;QAEzB,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,GAAG,KAAK,OAAO,KAAK,GAAG,UAAU,GAAG,CAAC;QAE3C,MAAM,YAAY,SAAS,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,OAAO;QACvB,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,KAAK,CAAC,GAAG,GAAG,CAAC;QAE9C,IAAI,MAAM,QAAQ,MAAM,UAAU,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS;YAC/E,OAAO;QACP;QAEA,OAAO,IAAI,KAAK,KAAK,GAAG,CAAC,MAAM,QAAQ,GAAG,KAAK,MAAM;IACzD;IAEA,oDAAoD;IACpD,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;YACxB,OAAO;QACX;IACJ,EAAE,OAAO,GAAG;QACR,OAAO;IACX;IAEA,OAAO;AACX;AAGA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEO,MAAM,sBAAsB,CAAC;IAChC,MAAM,cAAc;QAAE,MAAM;QAAM,QAAQ;QAAM,UAAU;IAAM;IAEhE,IAAI,CAAC,aAAa;QACd,OAAO;YAAE,MAAM,IAAI;YAAQ,MAAM;QAAY;IACjD;IAEA,MAAM,OAAO,eAAe;IAE5B,IAAI,QAAQ,CAAC,MAAM,KAAK,OAAO,KAAK;QAC/B,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QAExD,MAAM,gBAAgB,YAAY,KAAK,CAAC;QACxC,MAAM,WAAW,eAAe,CAAC,EAAE,IAAI;QAEvC,OAAO;YACH,MAAM,IAAI,KAAK,KAAK,cAAc,IAAI,KAAK,WAAW,IAAI,KAAK,UAAU;YACzE,MAAM;gBAAE;gBAAM;gBAAQ;YAAS;QACnC;IACL;IAEA,OAAO;QACH,MAAM,IAAI;QACV,MAAM;IACV;AACJ;AAIO,MAAM,wBAAwB,CAAC;IAClC,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC,QAAQ;QAC3C,OAAO;IACT;IACA,IAAI;QACA,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,MAAM,KAAK,OAAO,KAAK;YACvB,OAAO;QACX;QACA,MAAM,MAAM,OAAO,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG;QAClD,MAAM,QAAQ,OAAO,KAAK,WAAW,KAAK,GAAG,QAAQ,CAAC,GAAG;QACzD,MAAM,OAAO,KAAK,cAAc;QAChC,MAAM,OAAO,OAAO,KAAK,WAAW,IAAI,QAAQ,CAAC,GAAG;QACpD,MAAM,SAAS,OAAO,KAAK,aAAa,IAAI,QAAQ,CAAC,GAAG;QACxD,OAAO,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;IAC5D,EAAE,OAAO,GAAG;QACR,OAAO;IACX;AACJ","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { Job } from '@/lib/truckershub-types';\nimport type { Application } from '@/lib/applications';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { unstable_cache as cache } from 'next/cache';\n\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\n\n\nconst readJsonFile = cache(async <T>(filePath: string): Promise<T> => {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n           return { applications: [] } as any;\n        }\n        throw error;\n    }\n}, ['json-files-data'], { revalidate: 10 });\n\n\ntype UserApiResponse = {\n    status: boolean;\n    response: {\n        username: string;\n        email: string;\n        avatar: string;\n        country: string;\n        role: {\n            name: string;\n        };\n        truckersmp_id: number;\n        steam_id: string;\n        total_km: number;\n        total_jobs: number;\n        longest_job: number;\n        id: number;\n        registered: string;\n        xp: number;\n        money: number;\n        weight: number;\n        fuel: number;\n    };\n};\n\ntype JobsApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\ntype StatsApiResponse = {\n    status: boolean;\n    response: {\n        ets: { total_km: number; total_jobs: number; longest_job: number };\n        ats: { total_km: number; total_jobs: number; longest_job: number };\n    };\n};\n\nexport type UserProfile = Application & {\n    license_number: string;\n    division: string | null;\n    timezone: string;\n    jobs: Job[];\n    stats: StatsApiResponse['response'] | null;\n    avatar: string;\n    total_km: number;\n    total_jobs: number;\n    longest_job: number;\n    registered: string;\n    role: string;\n    monthly_xp: number;\n    monthly_income: number;\n    monthly_weight: number;\n    monthly_fuel: number;\n    truckersmpId: number | null;\n};\n\nasync function fetchFromTruckersHub(endpoint: string) {\n     const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n    const url = `${process.env.APP_URL}/api/truckershub?endpoint=${endpoint}`;\n    const res = await fetch(url, {\n        next: { revalidate: 300 } // Revalidate every 5 minutes\n    });\n\n    if (!res.ok) {\n        console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n        return null;\n    }\n\n    return res.json();\n}\n\nasync function getTMPVTCDetails(truckersmpId: number | null) {\n    if (!truckersmpId) return null;\n    try {\n        const res = await fetch(`${process.env.APP_URL}/api/truckersmp?endpoint=player/${truckersmpId}`);\n        if (!res.ok) return null;\n        const data = await res.json();\n        return data.response?.vtc;\n    } catch (error) {\n        console.error(\"Failed to fetch from TruckersMP:\", error);\n        return null;\n    }\n}\n\n\nexport async function getProfileData(email: string): Promise<UserProfile | null> {\n    const applicationsData = await readJsonFile<{ applications: Application[] }>(applicationsFilePath);\n    const userApplication = applicationsData.applications.find(app => app.email === email && app.status === 'Accepted');\n\n    if (userApplication) {\n        const [jobsData, statsData, driverData] = await Promise.all([\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}/jobs`) as Promise<JobsApiResponse | null>,\n            fetchFromTruckersHub(`stats/${userApplication.steamId}`) as Promise<StatsApiResponse | null>,\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}`) as Promise<UserApiResponse | null>,\n        ]);\n        \n        const driver = (driverData && driverData.status) ? driverData.response : null;\n        const truckersmpId = driver?.truckersmp_id || null;\n\n        const [tmpVtcData] = await Promise.all([\n             getTMPVTCDetails(truckersmpId),\n        ]);\n\n\n        const jobs = (jobsData && jobsData.status && Array.isArray(jobsData.response)) ? jobsData.response : [];\n        const stats = (statsData && statsData.status) ? statsData.response : null;\n\n        const totalKm = stats?.ets.total_km || 0 + stats?.ats.total_km || 0;\n        const totalJobs = stats?.ets.total_jobs || 0 + stats?.ats.total_jobs || 0;\n        const longestJob = Math.max(stats?.ets.longest_job || 0, stats?.ats.longest_job || 0);\n\n        return {\n            ...userApplication,\n            license_number: `TP${userApplication.id.substring(4, 10)}`,\n            division: 'Alpha',\n            timezone: 'Asia/Kolkata', // Placeholder\n            jobs,\n            stats,\n            avatar: userApplication.avatar || driver?.avatar || \"https://static.truckersmp.com/avatars/5635477.1754020942.png\",\n            total_km: totalKm,\n            total_jobs: totalJobs,\n            longest_job: longestJob,\n            registered: driver?.registered || userApplication.submittedAt,\n            role: tmpVtcData?.role || driver?.role.name || 'Driver',\n            monthly_xp: driver?.xp || 0,\n            monthly_income: driver?.money || 0,\n            monthly_weight: driver?.weight || 0,\n            monthly_fuel: driver?.fuel || 0,\n            truckersmpId: truckersmpId,\n        };\n    } else {\n        console.error(`No accepted application found for email:`, email);\n        return null;\n    }\n}\n"],"names":[],"mappings":";;;;;;IAmHsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/about/actions.ts"],"sourcesContent":["\n'use server';\n\nimport eventsData from '@/lib/events.json';\nimport { parseEventDate } from '@/lib/date-utils';\n\nconst VTC_ID = '73933';\n\ntype TruckersMPVtcResponse = {\n    error: boolean;\n    response?: {\n        members_count: number;\n    }\n}\n\nasync function fetchTruckersMPVtcData(): Promise<number> {\n    try {\n        const url = `https://api.truckersmp.com/v2/vtc/${VTC_ID}`;\n        const res = await fetch(url, {\n            next: { revalidate: 3600 } // Revalidate every hour\n        });\n        \n        if (!res.ok) {\n            console.error(`Failed to fetch from TruckersMP VTC endpoint:`, res.status, await res.text());\n            return 0;\n        }\n\n        const data: TruckersMPVtcResponse = await res.json();\n        \n        if (data && !data.error && data.response) {\n            return data.response.members_count;\n        } else {\n            console.error(`Invalid API response structure from TruckersMP:`, data);\n            return 0;\n        }\n    } catch (error) {\n        console.error(`Error fetching from TruckersMP:`, error);\n        return 0;\n    }\n}\n\nfunction getCompletedEventsCount(): number {\n    const now = new Date();\n    // We only count internal events as \"completed\" by the VTC\n    return eventsData.events.filter(event => {\n        if (event.type !== 'internal') return false;\n        const eventDate = parseEventDate(event.meetupTime || event.date);\n        return eventDate ? eventDate < now : false;\n    }).length;\n}\n\nexport async function getAchievementsData() {\n    const totalDrivers = await fetchTruckersMPVtcData();\n    const completedEvents = getCompletedEventsCount();\n    return { totalDrivers, completedEvents };\n}\n"],"names":[],"mappings":";;;;;;IAmDsB,sBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/%28hub%29/dashboard-client.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { AreaChart, Area, PieChart, Pie, Cell, Legend, ResponsiveContainer } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Table, TableBody, TableCell, TableHeader, TableHead, TableRow } from '@/components/ui/table';\nimport { Bell, HelpCircle, User, Truck, Calendar, Flame, Dot, Users, Settings, LogOut, Loader2, MapPin, Briefcase } from 'lucide-react';\nimport Image from 'next/image';\nimport { Badge } from '@/components/ui/badge';\nimport type { Event } from '@/lib/events';\nimport { PlaceHolderImages } from '@/lib/placeholder-images';\nimport Link from 'next/link';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport type { VtcStats, LeaderboardUser, Job, LiveDriver } from '@/lib/truckershub-types';\nimport type { UserProfile } from '../profile/actions';\nimport { getDashboardData } from './actions';\nimport eventsData from '@/lib/events.json';\nimport { parseEventDate } from '@/lib/date-utils';\nimport { getProfileData } from '../profile/actions';\nimport { getAchievementsData } from '@/app/about/actions';\n\nconst StatCard = ({ title, value, icon, className = '' }: { title: string, value: string, icon: React.ReactNode, className?: string }) => (\n    <Card className={`bg-card/80 backdrop-blur-sm ${className}`}>\n        <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-4\">\n                {icon}\n                <div>\n                    <p className=\"text-sm text-muted-foreground\">{title}</p>\n                    <p className=\"text-2xl font-bold\">{value}</p>\n                </div>\n            </div>\n        </CardContent>\n    </Card>\n);\n\nconst monthlyJobsData = [\n  { name: 'Jun', jobs: 2500 },\n  { name: 'Jul', jobs: 2000 },\n  { name: 'Aug', jobs: 1800 },\n  { name: 'Sep', jobs: 1500 },\n  { name: 'Oct', jobs: 500 },\n];\n\nconst goalData = [\n  { name: 'Completed', value: 80 },\n  { name: 'Left', value: 20 },\n];\nconst COLORS = ['#3CB371', '#0d342f'];\n\ntype DashboardPageProps = {\n    stats: VtcStats | null;\n    allTime: LeaderboardUser[] | null;\n    monthly: LeaderboardUser[] | null;\n    jobs: Job[] | null;\n    user: { username: string } | null;\n    liveDrivers: LiveDriver[] | null;\n}\n\nconst getGreeting = () => {\n    const now = new Date();\n    const options = { timeZone: 'Asia/Kolkata', hour: 'numeric', hour12: false };\n    const hour = parseInt(new Intl.DateTimeFormat('en-US', options).format(now));\n\n    if (hour >= 5 && hour < 12) {\n        return 'Good Morning';\n    } else if (hour >= 12 && hour < 17) {\n        return 'Good Afternoon';\n    } else if (hour >= 17 && hour < 21) {\n        return 'Good Evening';\n    } else {\n        return 'Good Night';\n    }\n};\n\nconst getNearestPartnerEvent = (): (Event & { image: any }) | null => {\n    const now = new Date();\n    const partnerEvents = eventsData.events\n        .filter(e => e.type === 'partner')\n        .map(e => ({...e, parsedDate: parseEventDate(e.meetupTime || e.date)}))\n        .filter(e => e.parsedDate && e.parsedDate > now)\n        .sort((a, b) => a.parsedDate!.getTime() - b.parsedDate!.getTime());\n    \n    if (partnerEvents.length === 0) return null;\n\n    const nearestEvent = partnerEvents[0];\n    const image = PlaceHolderImages.find(p => p.id === nearestEvent.imageId);\n    \n    return { ...nearestEvent, image };\n};\n\n\nexport function DashboardClientPage({ initialDashboardData, initialNearestPartnerEvent, initialUserProfile, initialTotalDrivers }: { initialDashboardData: DashboardPageProps | null, initialNearestPartnerEvent: (Event & { image: any }) | null, initialUserProfile: UserProfile | null, initialTotalDrivers: number }) {\n    const [greeting, setGreeting] = useState('');\n    const [dashboardData, setDashboardData] = useState(initialDashboardData);\n    const [nearestPartnerEvent, setNearestPartnerEvent] = useState(initialNearestPartnerEvent);\n    const [userProfile, setUserProfile] = useState(initialUserProfile);\n    const [totalDrivers, setTotalDrivers] = useState(initialTotalDrivers);\n    const [isLoading, setIsLoading] = useState(!initialDashboardData);\n\n\n    useEffect(() => {\n        setGreeting(getGreeting());\n        const greetingInterval = setInterval(() => setGreeting(getGreeting()), 60000);\n\n        const fetchData = async () => {\n            try {\n                const [data, achievementsData, profileData] = await Promise.all([\n                    getDashboardData(),\n                    getAchievementsData(),\n                    getProfileData(\"lsk27102@gmail.com\")\n                ]);\n\n                setDashboardData(data);\n                setTotalDrivers(achievementsData.totalDrivers);\n                setUserProfile(profileData);\n                setNearestPartnerEvent(getNearestPartnerEvent());\n\n            } catch (error) {\n                console.error(\"Failed to refresh dashboard data:\", error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        if (!initialDashboardData) {\n            fetchData();\n        }\n\n        const dataInterval = setInterval(fetchData, 30000);\n\n        return () => {\n            clearInterval(greetingInterval);\n            clearInterval(dataInterval);\n        };\n    }, [initialDashboardData]);\n\n    if (isLoading || !dashboardData || !userProfile) {\n        return <div className=\"p-8 text-center\"><Loader2 className=\"mx-auto h-12 w-12 animate-spin\" /> <p className=\"mt-4\">Loading dashboard...</p></div>;\n    }\n    const { stats, allTime, monthly, jobs, user, liveDrivers } = dashboardData;\n    const vtcStats = stats;\n    const allTimeLeaderboard: LeaderboardUser[] = allTime || [];\n    const monthlyLeaderboard: LeaderboardUser[] = monthly || [];\n    const recentJobs: Job[] = jobs || [];\n    const username = userProfile?.name || user?.username || \"Driver\";\n    const heroImage = PlaceHolderImages.find(p => p.id === 'hero-truck');\n    const activeDriversCount = liveDrivers?.length ?? 0;\n\n    return (\n        <div className=\"p-4 md:p-8 space-y-6 bg-background text-white\">\n            {/* Header */}\n            <div className=\"flex justify-between items-center\">\n                <h1 className=\"text-2xl font-semibold text-primary\">{greeting} {username}</h1>\n                <div className=\"flex items-center gap-4\">\n                    <Button variant=\"ghost\" size=\"icon\"><Bell size={18} /></Button>\n                    <Button variant=\"ghost\" size=\"icon\"><HelpCircle size={18} /></Button>\n                    <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                            <Avatar className=\"h-9 w-9 cursor-pointer\">\n                                <AvatarImage src={userProfile?.avatar} alt=\"User avatar\" />\n                                <AvatarFallback>{username.charAt(0)}</AvatarFallback>\n                            </Avatar>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                            <DropdownMenuLabel>My Account</DropdownMenuLabel>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem asChild>\n                                <Link href=\"/driver-hub/profile\">\n                                    <User className=\"mr-2 h-4 w-4\" />\n                                    <span>Profile</span>\n                                </Link>\n                            </DropdownMenuItem>\n                             <DropdownMenuItem asChild>\n                                <Link href=\"/driver-hub/profile/settings\">\n                                    <Settings className=\"mr-2 h-4 w-4\" />\n                                    <span>Settings</span>\n                                </Link>\n                            </DropdownMenuItem>\n                            <DropdownMenuSeparator />\n                             <DropdownMenuItem asChild>\n                                <Link href=\"/\">\n                                    <LogOut className=\"mr-2 h-4 w-4\" />\n                                    <span>Logout</span>\n                                </Link>\n                            </DropdownMenuItem>\n                        </DropdownMenuContent>\n                    </DropdownMenu>\n                </div>\n            </div>\n\n            {/* Hero Section */}\n            {heroImage &&\n                <Card className=\"relative overflow-hidden bg-card border-0 h-64\">\n                        <Image src={heroImage.imageUrl} alt={heroImage.description} layout=\"fill\" objectFit=\"cover\" className=\"z-0\" />\n                        <div className=\"absolute inset-0 bg-black/60\"/>\n                        <CardContent className=\"relative z-10 p-6 flex flex-col justify-center h-full text-center items-center\">\n                            <h2 className=\"text-4xl font-headline font-bold text-white\">Welcome to Tamil Pasanga VTC</h2>\n                            <p className=\"text-muted-foreground mt-2 max-w-2xl\">The premier virtual trucking company where passion for the open road meets a vibrant community spirit. Great Experience, We Believe In Quality Not Quantity</p>\n                        </CardContent>\n                </Card>\n            }\n\n\n            {/* Stats Cards */}\n             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <StatCard title=\"Live\" value={activeDriversCount.toString()} icon={<Users size={24} />} />\n                <StatCard title=\"Total Drivers\" value={totalDrivers > 0 ? totalDrivers.toLocaleString() : '...'} icon={<Users size={24} />} />\n                <StatCard title=\"Total Distance\" value={`${vtcStats?.total_distance?.toLocaleString() || '...'} kms`} icon={<MapPin size={24} />} />\n                <StatCard title=\"Total Jobs\" value={vtcStats?.total_jobs?.toLocaleString() || '...'} icon={<Briefcase size={24} />} />\n            </div>\n\n            {/* Upcoming Event */}\n            {nearestPartnerEvent && nearestPartnerEvent.image && (\n                <Card className=\"relative overflow-hidden bg-transparent border-0\">\n                    <Image src={nearestPartnerEvent.image.imageUrl} alt={nearestPartnerEvent.title} layout=\"fill\" objectFit=\"cover\" className=\"z-0\" />\n                    <div className=\"absolute inset-0 bg-black/50\"/>\n                    <CardHeader>\n                        <CardTitle>Latest Event Highlights</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"relative z-10 p-6 flex items-center justify-between\">\n                        <div>\n                            <p className=\"text-sm text-pink-300\">Upcoming Partner Event</p>\n                            <h2 className=\"text-xl font-bold mt-1\">{nearestPartnerEvent.title}</h2>\n                            <p className=\"text-sm text-muted-foreground mt-1\">{nearestPartnerEvent.meetupTime}</p>\n                        </div>\n                         <Button asChild>\n                            <Link href={nearestPartnerEvent.url} target=\"_blank\">Details</Link>\n                        </Button>\n                    </CardContent>\n                </Card>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}