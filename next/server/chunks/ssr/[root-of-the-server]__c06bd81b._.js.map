{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const applicationSchema = z.object({\n    username: z.string().min(1, 'Username is required'),\n    email: z.string().email('Invalid email address'),\n    truckersmp: z.string().url('Invalid TruckersMP profile URL.').optional().or(z.literal('')),\n    truckershub: z.string().url('Invalid TruckersHub profile URL.').optional().or(z.literal('')),\n    password: z.string().min(8, 'Password must be at least 8 characters long'),\n    terms: z.literal<boolean>(true, {\n        errorMap: () => ({ message: 'You must accept the terms and conditions' }),\n    }),\n});\n\nexport type ApplicationData = z.infer<typeof applicationSchema>;\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,mCAAmC,QAAQ,GAAG,EAAE,CAAC,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IACtF,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,oCAAoC,QAAQ,GAAG,EAAE,CAAC,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAC;IACxF,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,OAAO,oIAAA,CAAA,IAAC,CAAC,OAAO,CAAU,MAAM;QAC5B,UAAU,IAAM,CAAC;gBAAE,SAAS;YAA2C,CAAC;IAC5E;AACJ","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { applicationSchema, type ApplicationData } from '@/lib/schemas';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport type { Application, ApplicationsData } from '@/lib/applications';\nimport { revalidatePath } from 'next/cache';\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\n\nasync function readApplications(): Promise<ApplicationsData> {\n    try {\n        const data = await fs.readFile(applicationsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return { applications: [] };\n        }\n        throw error;\n    }\n}\n\nasync function writeApplications(data: ApplicationsData): Promise<void> {\n    await fs.writeFile(applicationsFilePath, JSON.stringify(data, null, 2));\n}\n\nexport type SubmitResult = {\n    success: boolean;\n    message: string;\n    applicationId?: string;\n    errors?: Record<string, string[] | undefined>;\n}\n\nfunction generateApplicationId() {\n    const randomNumber = Math.floor(Math.random() * 9000) + 1000;\n    return `TP-${randomNumber}`;\n}\n\nexport async function submitApplication(data: ApplicationData): Promise<SubmitResult> {\n    const validation = applicationSchema.safeParse(data);\n\n    if (!validation.success) {\n        return {\n            success: false,\n            message: 'Invalid form data.',\n            errors: validation.error.flatten().fieldErrors,\n        };\n    }\n\n    const applicationId = generateApplicationId();\n    const { username, email, truckersmp, truckershub } = validation.data;\n\n    const newApplication: Application = {\n        id: applicationId,\n        name: username,\n        email: email,\n        truckersmpUrl: truckersmp,\n        truckershubUrl: truckershub,\n        status: 'Pending',\n        submittedAt: new Date().toISOString(),\n    };\n\n    try {\n        const applicationsData = await readApplications();\n        applicationsData.applications.unshift(newApplication);\n        await writeApplications(applicationsData);\n        revalidatePath('/admin/applications');\n    } catch (error) {\n        console.error('Error saving application:', error);\n        return { success: false, message: 'Server error: Could not save application.' };\n    }\n\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n    \n\n    if (!webhookUrl) {\n        console.error('DISCORD_WEBHOOK_URL is not set in .env file');\n        // Don't fail the whole process if webhook is not set\n        return { success: true, message: 'Application submitted successfully!', applicationId };\n    }\n\n\n    const fields = [\n        { name: 'Username', value: username, inline: true },\n        { name: 'Email', value: email, inline: true },\n        { name: 'TruckersMP', value: truckersmp || 'Not Provided', inline: false },\n        { name: 'TruckersHub', value: truckershub || 'Not Provided', inline: false },\n    ];\n\n    const embed = {\n        title: `New Driver Hub Registration - ${applicationId}`,\n        color: 3977201, // Medium Sea Green\n        fields: fields,\n        timestamp: new Date().toISOString(),\n        footer: {\n            text: 'Tamil Pasanga VTC Registration',\n        },\n    };\n    \n    const payload = {\n        content: `New registration from ${username}`,\n        embeds: [embed],\n        components: [\n          {\n            type: 1, // Action Row\n            components: [\n              {\n                type: 2, // Button\n                style: 3, // Success\n                label: 'Accept',\n                custom_id: `accept_${applicationId}`,\n              },\n              {\n                type: 2, // Button\n                style: 4, // Danger\n                label: 'Reject',\n                custom_id: `reject_${applicationId}`,\n              },\n            ],\n          },\n        ],\n    };\n\n    try {\n        const response = await fetch(webhookUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        });\n\n        if (!response.ok) {\n            console.error(`Discord webhook failed with status: ${response.status}`);\n            const errorBody = await response.text();\n            console.error('Error body:', errorBody);\n            // Don't fail the whole process if webhook fails, application is saved.\n        }\n\n        return { success: true, message: 'Application submitted successfully!', applicationId };\n    } catch (error) {\n        console.error('Error submitting application to Discord:', error);\n        // Don't fail the whole process if webhook fails, application is saved.\n        return { success: true, message: 'Application submitted successfully!', applicationId };\n    }\n}\n\nexport type ApplicationStatusResult = {\n    applicationId: string;\n    status: 'Pending' | 'Accepted' | 'Rejected' | 'Not Found';\n};\n\nexport async function getApplicationStatus(\n  applicationId: string\n): Promise<ApplicationStatusResult> {\n    const validIdRegex = /^TP-\\d{4}$/;\n    if (!validIdRegex.test(applicationId)) {\n        return { applicationId, status: 'Not Found' };\n    }\n\n    try {\n        const applicationsData = await readApplications();\n        const application = applicationsData.applications.find(app => app.id === applicationId);\n\n        if (application) {\n            // Re-mapping the status here to fit the limited set for the public status check page.\n            // If the internal status is 'Interview', we show it as 'Pending' to the user.\n            const publicStatus = application.status === 'Accepted' || application.status === 'Rejected' || application.status === 'Pending' \n                ? application.status \n                : 'Pending';\n\n            return { applicationId, status: publicStatus as 'Pending' | 'Accepted' | 'Rejected' };\n        } else {\n            return { applicationId, status: 'Not Found' };\n        }\n    } catch (error) {\n        console.error('Error reading application status:', error);\n        return { applicationId, status: 'Not Found' }; // Treat file read errors as \"Not Found\" for the user\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/applications/server-actions.ts"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport type { ApplicationStatus, ApplicationsData, Application } from '@/lib/applications';\nimport type { StaffData, StaffMember } from '@/lib/staff-members';\nimport type { EventsData, Event, Booking, BookingStatus } from '@/lib/events';\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\nconst staffFilePath = path.join(process.cwd(), 'src', 'lib', 'staff-members.json');\nconst eventsFilePath = path.join(process.cwd(), 'src', 'lib', 'events.json');\n\nasync function readJsonFile<T>(filePath: string): Promise<T> {\n    try {\n        const data = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            if (filePath.includes('applications.json')) {\n                return { applications: [] } as T;\n            }\n            if (filePath.includes('staff-members.json')) {\n                return { staffMembers: [] } as T;\n            }\n             if (filePath.includes('events.json')) {\n                return { events: [] } as T;\n            }\n        }\n        throw error;\n    }\n}\n\nasync function writeJsonFile<T>(filePath: string, data: T): Promise<void> {\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n}\n\nasync function sendApplicationWebhookNotification(application: Application) {\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n    if (!webhookUrl) {\n        console.error('DISCORD_WEBHOOK_URL is not set.');\n        return;\n    }\n\n    let title = '';\n    let color = 0;\n    let description = '';\n\n    switch (application.status) {\n        case 'Accepted':\n            title = `Application Accepted: ${application.id}`;\n            color = 5763719; // Green\n            description = `Congratulations to **${application.name}**! Their application has been accepted.`;\n            break;\n        case 'Rejected':\n            title = `Application Rejected: ${application.id}`;\n            color = 15548997; // Red\n            description = `Application for **${application.name}** has been rejected.`;\n            break;\n        default:\n            return; // Don't send for 'Pending' or other statuses\n    }\n\n    const embed = {\n        title: title,\n        description: description,\n        color: color,\n        timestamp: new Date().toISOString(),\n        fields: [\n            { name: 'Applicant Name', value: application.name, inline: true },\n        ],\n        footer: {\n            text: 'Tamil Pasanga VTC | Application Status Update',\n        },\n    };\n\n    const payload = { embeds: [embed] };\n\n    try {\n        const response = await fetch(webhookUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n        });\n\n        if (!response.ok) {\n            console.error(`Discord webhook failed with status: ${response.status}`);\n        }\n    } catch (error) {\n        console.error('Error sending Discord webhook notification:', error);\n    }\n}\n\n\nexport async function getApplications(): Promise<Application[]> {\n    const data = await readJsonFile<ApplicationsData>(applicationsFilePath);\n    // Sort by submission date, newest first\n    return data.applications.sort((a, b) => new Date(b.submittedAt).getTime() - new Date(a.submittedAt).getTime());\n}\n\nexport async function updateApplicationStatus(\n  applicationId: string,\n  newStatus: ApplicationStatus,\n  role: string = 'Trainee'\n): Promise<{ success: boolean; message: string }> {\n    try {\n        const applicationsData = await readJsonFile<ApplicationsData>(applicationsFilePath);\n        const staffData = await readJsonFile<StaffData>(staffFilePath);\n\n        const appIndex = applicationsData.applications.findIndex((app) => app.id === applicationId);\n\n        if (appIndex === -1) {\n            return { success: false, message: `Application with ID ${applicationId} not found.` };\n        }\n        \n        const application = applicationsData.applications[appIndex];\n        \n        // Update status in applications.json\n        application.status = newStatus;\n        await writeJsonFile(applicationsFilePath, applicationsData);\n\n        // If accepted, add to staff-members.json if not already present\n        if (newStatus === 'Accepted') {\n            const isAlreadyStaff = staffData.staffMembers.some(member => member.name === application.name);\n            if (!isAlreadyStaff) {\n                const newMember: StaffMember = {\n                    id: `staff-${Date.now()}`,\n                    name: application.name,\n                    role: role,\n                    imageId: 'testimonial-avatar',\n                    imageUrl: \"https://media.discordapp.net/attachments/1116720480544636999/1274425873201631304/TP_NEW_WB_PNGxxxhdpi.png?ex=68d4d8d5&is=68d38755&hm=b6d4e0e4ef2c3215a4de4fb2f592189a60ddd94c651f96fe04deac2e7f96ddc6&=&format=webp&quality=lossless&width=826&height=826\",\n                    steamUrl: application.steamUrl,\n                    truckersmpUrl: application.truckersmpUrl,\n                };\n                staffData.staffMembers.push(newMember);\n                await writeJsonFile(staffFilePath, staffData);\n            }\n        }\n\n        revalidatePath('/admin/applications');\n        revalidatePath('/staff');\n        \n        // Send Discord notification\n        await sendApplicationWebhookNotification(application);\n\n        return { success: true, message: 'Application status updated successfully.' };\n    } catch (error) {\n        console.error('Error updating application status:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n\n// --- Booking Actions ---\n\nexport async function getEventsWithBookings(): Promise<Event[]> {\n    const data = await readJsonFile<EventsData>(eventsFilePath);\n    return data.events.filter(event => event.slots && event.slots.some(slot => slot.bookings && slot.bookings.length > 0));\n}\n\nasync function sendBookingWebhookNotification(booking: Booking, event: Event, newStatus: BookingStatus, areaId: string) {\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n    if (!webhookUrl) {\n        console.error('DISCORD_WEBHOOK_URL is not set.');\n        return;\n    }\n\n    let title = '';\n    let color = 0;\n    let description = '';\n    let imageUrl = '';\n    \n    const area = event.slots?.find(a => a.id === areaId);\n\n    switch (newStatus) {\n        case 'approved':\n            title = `Booking Approved: ${booking.vtcName}`;\n            color = 5763719; // Green\n            description = `The booking for **${booking.vtcName}** for slot **#${booking.slotNumber}** at event **${event.title}** has been approved.`;\n             if (area) {\n                imageUrl = area.imageUrl;\n            }\n            break;\n        case 'rejected':\n             title = `Booking Rejected: ${booking.vtcName}`;\n            color = 15548997; // Red\n            description = `The booking for **${booking.vtcName}** for slot **#${booking.slotNumber}** at event **${event.title}** has been rejected.`;\n            break;\n        case 'hold':\n            title = `Booking On Hold: ${booking.vtcName}`;\n            color = 16753920; // Orange\n            description = `The booking for **${booking.vtcName}** for slot **#${booking.slotNumber}** at event **${event.title}** has been put on hold.`;\n            break;\n        default:\n            return;\n    }\n\n\n    const embed: any = {\n        title: title,\n        description: description,\n        color: color,\n        timestamp: new Date().toISOString(),\n        footer: { text: 'Tamil Pasanga VTC | Slot Booking Update' },\n    };\n\n    if (newStatus === 'approved' && imageUrl) {\n        embed.image = { url: imageUrl };\n    }\n\n    try {\n        await fetch(webhookUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ embeds: [embed] }),\n        });\n    } catch (error) {\n        console.error('Error sending booking status webhook:', error);\n    }\n}\n\n\nexport async function updateBookingStatus(\n    eventId: string,\n    areaId: string,\n    bookingId: string,\n    newStatus: BookingStatus\n): Promise<{ success: boolean; message: string }> {\n    try {\n        const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n        const event = eventsData.events.find(e => e.id === eventId);\n        if (!event || !event.slots) return { success: false, message: 'Event not found.' };\n\n        const area = event.slots.find(a => a.id === areaId);\n        if (!area || !area.bookings) return { success: false, message: 'Slot area not found.' };\n        \n        const booking = area.bookings.find(b => b.id === bookingId);\n        if (!booking) return { success: false, message: 'Booking not found.' };\n\n        booking.status = newStatus;\n        \n        await writeJsonFile(eventsFilePath, eventsData);\n        \n        await sendBookingWebhookNotification(booking, event, newStatus, areaId);\n        \n        revalidatePath('/admin/bookings');\n        revalidatePath(`/events/${eventId}`);\n        \n        return { success: true, message: `Booking status updated to ${newStatus}.` };\n\n    } catch (error) {\n        console.error('Error updating booking status:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n\nexport async function deleteBooking(\n    eventId: string,\n    areaId: string,\n    bookingId: string\n): Promise<{ success: boolean; message: string }> {\n    try {\n        const eventsData = await readJsonFile<EventsData>(eventsFilePath);\n        const event = eventsData.events.find(e => e.id === eventId);\n        if (!event || !event.slots) return { success: false, message: 'Event not found.' };\n\n        const area = event.slots.find(a => a.id === areaId);\n        if (!area || !area.bookings) return { success: false, message: 'Slot area not found.' };\n        \n        const bookingIndex = area.bookings.findIndex(b => b.id === bookingId);\n        if (bookingIndex === -1) return { success: false, message: 'Booking not found.' };\n\n        area.bookings.splice(bookingIndex, 1);\n        \n        await writeJsonFile(eventsFilePath, eventsData);\n        \n        revalidatePath('/admin/bookings');\n        revalidatePath(`/events/${eventId}`);\n        \n        return { success: true, message: `Booking has been deleted.` };\n\n    } catch (error) {\n        console.error('Error deleting booking:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/bookings/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {submitApplication as '40f1f199a825c96ed8f20260f98df34feda717d01a'} from 'ACTIONS_MODULE0'\nexport {getEventsWithBookings as '00269662dafff42bdb137b5afde488acc7da28a685'} from 'ACTIONS_MODULE1'\nexport {updateApplicationStatus as '7013b9b99010c011e3756672687b65ca315b3f1716'} from 'ACTIONS_MODULE1'\nexport {updateBookingStatus as '7887094c80fa5e9fbdcac877a61795b17e0b3c6424'} from 'ACTIONS_MODULE1'\nexport {deleteBooking as '700f1cc5e8d8b4edb6f0591dc63ddf6fec3faff3dc'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/bookings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/bookings/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/bookings/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/bookings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/bookings/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/bookings/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}