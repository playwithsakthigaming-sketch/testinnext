{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/actions.ts"],"sourcesContent":["\n'use server';\n\nimport type { Job } from '@/lib/truckershub-types';\nimport type { Application } from '@/lib/applications';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { unstable_cache as cache } from 'next/cache';\n\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\n\n\nconst readJsonFile = cache(async <T>(filePath: string): Promise<T> => {\n    try {\n        const fileContent = await fs.readFile(filePath, 'utf-8');\n        return JSON.parse(fileContent);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n           return { applications: [] } as any;\n        }\n        throw error;\n    }\n}, ['json-files-data'], { revalidate: 10 });\n\n\ntype UserApiResponse = {\n    status: boolean;\n    response: {\n        username: string;\n        email: string;\n        avatar: string;\n        country: string;\n        role: {\n            name: string;\n        };\n        truckersmp_id: number;\n        steam_id: string;\n        total_km: number;\n        total_jobs: number;\n        longest_job: number;\n        id: number;\n        registered: string;\n        xp: number;\n        money: number;\n        weight: number;\n        fuel: number;\n    };\n};\n\ntype JobsApiResponse = {\n    status: boolean;\n    response: Job[] | {};\n};\n\ntype StatsApiResponse = {\n    status: boolean;\n    response: {\n        ets: { total_km: number; total_jobs: number; longest_job: number };\n        ats: { total_km: number; total_jobs: number; longest_job: number };\n    };\n};\n\nexport type UserProfile = Application & {\n    license_number: string;\n    division: string | null;\n    timezone: string;\n    jobs: Job[];\n    stats: StatsApiResponse['response'] | null;\n    avatar: string;\n    total_km: number;\n    total_jobs: number;\n    longest_job: number;\n    registered: string;\n    role: string;\n    monthly_xp: number;\n    monthly_income: number;\n    monthly_weight: number;\n    monthly_fuel: number;\n    truckersmpId: number | null;\n};\n\nasync function fetchFromTruckersHub(endpoint: string) {\n     const apiKey = process.env.TRUCKERSHUB_API_KEY;\n    if (!apiKey) {\n        console.error(\"TRUCKERSHUB_API_KEY is not set.\");\n        return null;\n    }\n    const url = `${process.env.APP_URL}/api/truckershub?endpoint=${endpoint}`;\n    const res = await fetch(url, {\n        next: { revalidate: 300 } // Revalidate every 5 minutes\n    });\n\n    if (!res.ok) {\n        console.error(`Failed to fetch from TruckersHub (${endpoint}):`, res.status, await res.text());\n        return null;\n    }\n\n    return res.json();\n}\n\nasync function getTMPVTCDetails(truckersmpId: number | null) {\n    if (!truckersmpId) return null;\n    try {\n        const res = await fetch(`${process.env.APP_URL}/api/truckersmp?endpoint=player/${truckersmpId}`);\n        if (!res.ok) return null;\n        const data = await res.json();\n        return data.response?.vtc;\n    } catch (error) {\n        console.error(\"Failed to fetch from TruckersMP:\", error);\n        return null;\n    }\n}\n\n\nexport async function getProfileData(email: string): Promise<UserProfile | null> {\n    const applicationsData = await readJsonFile<{ applications: Application[] }>(applicationsFilePath);\n    const userApplication = applicationsData.applications.find(app => app.email === email && app.status === 'Accepted');\n\n    if (userApplication) {\n        const [jobsData, statsData, driverData] = await Promise.all([\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}/jobs`) as Promise<JobsApiResponse | null>,\n            fetchFromTruckersHub(`stats/${userApplication.steamId}`) as Promise<StatsApiResponse | null>,\n            fetchFromTruckersHub(`drivers/${userApplication.steamId}`) as Promise<UserApiResponse | null>,\n        ]);\n        \n        const driver = (driverData && driverData.status) ? driverData.response : null;\n        const truckersmpId = driver?.truckersmp_id || null;\n\n        const [tmpVtcData] = await Promise.all([\n             getTMPVTCDetails(truckersmpId),\n        ]);\n\n\n        const jobs = (jobsData && jobsData.status && Array.isArray(jobsData.response)) ? jobsData.response : [];\n        const stats = (statsData && statsData.status) ? statsData.response : null;\n\n        const totalKm = stats?.ets.total_km || 0 + stats?.ats.total_km || 0;\n        const totalJobs = stats?.ets.total_jobs || 0 + stats?.ats.total_jobs || 0;\n        const longestJob = Math.max(stats?.ets.longest_job || 0, stats?.ats.longest_job || 0);\n\n        return {\n            ...userApplication,\n            license_number: `TP${userApplication.id.substring(4, 10)}`,\n            division: 'Alpha',\n            timezone: 'Asia/Kolkata', // Placeholder\n            jobs,\n            stats,\n            avatar: userApplication.avatar || driver?.avatar || \"https://static.truckersmp.com/avatars/5635477.1754020942.png\",\n            total_km: totalKm,\n            total_jobs: totalJobs,\n            longest_job: longestJob,\n            registered: driver?.registered || userApplication.submittedAt,\n            role: tmpVtcData?.role || driver?.role.name || 'Driver',\n            monthly_xp: driver?.xp || 0,\n            monthly_income: driver?.money || 0,\n            monthly_weight: driver?.weight || 0,\n            monthly_fuel: driver?.fuel || 0,\n            truckersmpId: truckersmpId,\n        };\n    } else {\n        console.error(`No accepted application found for email:`, email);\n        return null;\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/settings/actions.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { revalidatePath } from 'next/cache';\nimport type { ApplicationsData, Application } from '@/lib/applications';\n\nconst applicationsFilePath = path.join(process.cwd(), 'src', 'lib', 'applications.json');\n\nasync function readApplications(): Promise<ApplicationsData> {\n    try {\n        const data = await fs.readFile(applicationsFilePath, 'utf-8');\n        return JSON.parse(data);\n    } catch (error) {\n        if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n            return { applications: [] };\n        }\n        throw error;\n    }\n}\n\nasync function writeApplications(data: ApplicationsData): Promise<void> {\n    await fs.writeFile(applicationsFilePath, JSON.stringify(data, null, 2));\n}\n\nexport async function updatePassword(\n    applicationId: string,\n    currentPassword: string,\n    newPassword: string\n): Promise<{ success: boolean; message: string }> {\n    try {\n        const applicationsData = await readApplications();\n        const appIndex = applicationsData.applications.findIndex(app => app.id === applicationId);\n\n        if (appIndex === -1) {\n            return { success: false, message: 'User application not found.' };\n        }\n        \n        const application = applicationsData.applications[appIndex];\n\n        if (application.password !== currentPassword) {\n            return { success: false, message: 'Incorrect current password.' };\n        }\n\n        applicationsData.applications[appIndex].password = newPassword;\n        \n        await writeApplications(applicationsData);\n        \n        revalidatePath(`/driver-hub/profile/settings`);\n\n        return { success: true, message: 'Password updated successfully.' };\n    } catch (error) {\n        console.error('Error updating password:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n\n\nexport async function updateAvatar(\n    applicationId: string,\n    newAvatarUrl: string\n): Promise<{ success: boolean; message: string }> {\n     try {\n        const applicationsData = await readApplications();\n        const appIndex = applicationsData.applications.findIndex(app => app.id === applicationId);\n\n        if (appIndex === -1) {\n            return { success: false, message: 'User application not found.' };\n        }\n\n        applicationsData.applications[appIndex].avatar = newAvatarUrl;\n\n        await writeApplications(applicationsData);\n\n        revalidatePath(`/driver-hub/profile`);\n        revalidatePath(`/driver-hub/profile/settings`);\n\n        return { success: true, message: 'Avatar updated successfully.' };\n    } catch (error) {\n        console.error('Error updating avatar:', error);\n        return { success: false, message: 'An unexpected error occurred.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;;;;;;;AAGA,MAAM,uBAAuB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO;AAEpE,eAAe;IACX,IAAI;QACA,MAAM,OAAO,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,sBAAsB;QACrD,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAO,OAAO;QACZ,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACpD,OAAO;gBAAE,cAAc,EAAE;YAAC;QAC9B;QACA,MAAM;IACV;AACJ;AAEA,eAAe,kBAAkB,IAAsB;IACnD,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,sBAAsB,KAAK,SAAS,CAAC,MAAM,MAAM;AACxE;AAEO,eAAe,eAClB,aAAqB,EACrB,eAAuB,EACvB,WAAmB;IAEnB,IAAI;QACA,MAAM,mBAAmB,MAAM;QAC/B,MAAM,WAAW,iBAAiB,YAAY,CAAC,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAE3E,IAAI,aAAa,CAAC,GAAG;YACjB,OAAO;gBAAE,SAAS;gBAAO,SAAS;YAA8B;QACpE;QAEA,MAAM,cAAc,iBAAiB,YAAY,CAAC,SAAS;QAE3D,IAAI,YAAY,QAAQ,KAAK,iBAAiB;YAC1C,OAAO;gBAAE,SAAS;gBAAO,SAAS;YAA8B;QACpE;QAEA,iBAAiB,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG;QAEnD,MAAM,kBAAkB;QAExB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,4BAA4B,CAAC;QAE7C,OAAO;YAAE,SAAS;YAAM,SAAS;QAAiC;IACtE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YAAE,SAAS;YAAO,SAAS;QAAgC;IACtE;AACJ;AAGO,eAAe,aAClB,aAAqB,EACrB,YAAoB;IAEnB,IAAI;QACD,MAAM,mBAAmB,MAAM;QAC/B,MAAM,WAAW,iBAAiB,YAAY,CAAC,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAE3E,IAAI,aAAa,CAAC,GAAG;YACjB,OAAO;gBAAE,SAAS;gBAAO,SAAS;YAA8B;QACpE;QAEA,iBAAiB,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG;QAEjD,MAAM,kBAAkB;QAExB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,mBAAmB,CAAC;QACpC,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,4BAA4B,CAAC;QAE7C,OAAO;YAAE,SAAS;YAAM,SAAS;QAA+B;IACpE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE,SAAS;YAAO,SAAS;QAAgC;IACtE;AACJ;;;IAzDsB;IAiCA;;AAjCA,+OAAA;AAiCA,+OAAA","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/driver-hub/profile/settings/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getProfileData as '40fd4297d0ee03e0f048c25cec0c7fdd31c36392c2'} from 'ACTIONS_MODULE0'\nexport {updatePassword as '705963eebb89e61b9a37814ed444535b6d78d7f53a'} from 'ACTIONS_MODULE1'\nexport {updateAvatar as '6029b50261559da5dbd21a27ad89a8cf93dbb4a99f'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/settings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/profile/settings/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/profile/settings/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgT,GAC7U,8EACA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/driver-hub/profile/settings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/driver-hub/profile/settings/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/driver-hub/profile/settings/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}